[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js":"24","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js":"25","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js":"26","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":435,"mtime":1621027753457,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":1792,"mtime":1625782448414,"results":"32","hashOfConfig":"29"},{"size":220,"mtime":1622783555082,"results":"33","hashOfConfig":"29"},{"size":982,"mtime":1625733071268,"results":"34","hashOfConfig":"29"},{"size":5917,"mtime":1625803284765,"results":"35","hashOfConfig":"29"},{"size":3269,"mtime":1625217438867,"results":"36","hashOfConfig":"29"},{"size":1999,"mtime":1625223115946,"results":"37","hashOfConfig":"29"},{"size":1757,"mtime":1625221358692,"results":"38","hashOfConfig":"29"},{"size":1998,"mtime":1625803612212,"results":"39","hashOfConfig":"29"},{"size":6687,"mtime":1625733215878,"results":"40","hashOfConfig":"29"},{"size":3842,"mtime":1625732901334,"results":"41","hashOfConfig":"29"},{"size":11991,"mtime":1624505429298,"results":"42","hashOfConfig":"29"},{"size":8327,"mtime":1625548287716,"results":"43","hashOfConfig":"29"},{"size":4889,"mtime":1625801667550,"results":"44","hashOfConfig":"29"},{"size":1863,"mtime":1625802665252,"results":"45","hashOfConfig":"29"},{"size":367,"mtime":1625546893771,"results":"46","hashOfConfig":"29"},{"size":1537,"mtime":1625223095276,"results":"47","hashOfConfig":"29"},{"size":156,"mtime":1621000393565,"results":"48","hashOfConfig":"29"},{"size":515,"mtime":1621207032031,"results":"49","hashOfConfig":"29"},{"size":5042,"mtime":1625782610860,"results":"50","hashOfConfig":"29"},{"size":4118,"mtime":1625782636895,"results":"51","hashOfConfig":"29"},{"size":10258,"mtime":1624921678024,"results":"52","hashOfConfig":"29"},{"size":2815,"mtime":1625200516198,"results":"53","hashOfConfig":"29"},{"size":2389,"mtime":1625801521391,"results":"54","hashOfConfig":"29"},{"size":1240,"mtime":1625801445823,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"18bafpx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["115","116"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["117","118"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["119","120","121","122"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["123"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledCollapsibleNavContainer, StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledAnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faHome, faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    let scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>\r\n                    <ReactScrollLink title=\"AK\" id=\"homeSection\" underline={false} marginBottom={'0'}></ReactScrollLink>\r\n                </StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <StyledCollapsibleNavContainer>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNavLinks isOpen={isOpen}/>\r\n        </StyledCollapsibleNavContainer>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    const navBurgerAnimation = useSpring({\r\n        transform: isOpen \r\n        ? 'rotate(90deg)' \r\n        : 'rotate(0deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)} style={navBurgerAnimation}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNavLinks = ({isOpen}) => {\r\n    const navWindowAnimation = useSpring({\r\n        right: isOpen \r\n        ? '0%' \r\n        : '-50%'\r\n    })\r\n\r\n    return (\r\n        <StyledAnimatedContainer style={navWindowAnimation}>\r\n            <StyledNavigationListWrapper>\r\n                <SideBarNavigationLinks />\r\n            </StyledNavigationListWrapper>\r\n        </StyledAnimatedContainer>\r\n    )\r\n}\r\n\r\nconst SideBarNavigationLinks = () => {\r\n    return (\r\n        <StyledNavigationList>\r\n            <ReactScrollLink title=\"Home\" id=\"homeSection\" faIcon={faHome}/>\r\n            <ReactScrollLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}/>\r\n            <ReactScrollLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n            <ReactScrollLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n            <ReactScrollLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n        </StyledNavigationList>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["124"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper, StyledHomeLinkContainer, StyledHomeLinkIconTextContainer } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0, underline = true, marginBottom = '4vh'}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer marginBottom={marginBottom}>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                                <StyledAnimatedUnderline underline={underline}/>\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};\r\n\r\nexport const ReactScrollHomeLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledHomeLinkContainer>\r\n            <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                <StyledHomeLinkIconTextContainer>\r\n                    <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                    <div>\r\n                        {title}\r\n                    </div>\r\n                </StyledHomeLinkIconTextContainer>\r\n            </Link>\r\n        </StyledHomeLinkContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["125"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent, StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage, StyledNavigatorContentContainer, StyledNavigatorWrapper, StyledDropdownTextLine } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { aboutComponentTextConfig } from './AboutComponentText';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} minHeight={'90vh'}>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledAppContainer>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <AnimatedNavigator />\r\n        </StyledAppContainer>\r\n    )\r\n}\r\n\r\nconst NavigatorHeaderCards = ({children}) => {\r\n    return (\r\n        <StyledNavigatorListContainer>\r\n            <StyledNavigatorList>{children}</StyledNavigatorList>\r\n        </StyledNavigatorListContainer>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n    const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    const returnDropdownText = (textObject) => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <StyledDropdownHeader>\r\n                        {textObject.title}\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            {\r\n                                textObject.text.map((line) => {\r\n                                    return (\r\n                                        <StyledDropdownTextLine>\r\n                                                {line}\r\n                                        </StyledDropdownTextLine>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    // Sets and returns dropdown Text from aboutComponentTextConfig\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[0])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[1])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[2])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledNavigatorWrapper>\r\n            <NavigatorHeaderCards>\r\n                {aboutComponentTextConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                        title={n.navTitle}\r\n                        key={index}\r\n                        index={index}\r\n                        onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                    <StyledNavigatorCaret />\r\n                                    )\r\n                                }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </NavigatorHeaderCards>\r\n            <StyledNavigatorContentContainer>\r\n                {mainContent}\r\n            </StyledNavigatorContentContainer>\r\n        </StyledNavigatorWrapper>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n        \r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["126","127"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHeroTitle, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalTabNavButton, StyledModalTabContent, StyledModalTabContentTextListItem, StyledModalSubheader,StyledModalTabContentList, StyledModalHeroText, StyledModalTabContentTextSummary } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring';\r\n\r\n// Component Cards Text config\r\nimport { projectComponentCardTextConfig } from './ProjectComponentText';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                {\r\n                   projectComponentCardTextConfig.slice(0, 2).map((project) => {\r\n                        return (\r\n                            <StyledProjectCard>\r\n                                <StyledImageCropContainer height={'40vh'}>\r\n                                    <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledCardHoverContainer>\r\n                                    <StyledProjectCardTitle>\r\n                                        {project.title}\r\n                                    </StyledProjectCardTitle>\r\n                                    <StyledProjectInformation>\r\n                                        {project.description}\r\n                                    </StyledProjectInformation>\r\n                                    <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                        Read More\r\n                                    </StyledReadMore>\r\n                                    <StyledGithubLink \r\n                                        href={project.gitLink}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Github\r\n                                    </StyledGithubLink>\r\n                                </StyledCardHoverContainer>\r\n                            </StyledProjectCard>\r\n                        )\r\n                    })\r\n                }\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    {\r\n                        projectComponentCardTextConfig.slice(2, 4).map((project) => {\r\n                            return (\r\n                                <StyledProjectCard>\r\n                                    <StyledImageCropContainer height={'40vh'}>\r\n                                        <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                    </StyledImageCropContainer>\r\n                                    <StyledCardHoverContainer>\r\n                                        <StyledProjectCardTitle>\r\n                                            {project.title}\r\n                                        </StyledProjectCardTitle>\r\n                                        <StyledProjectInformation>\r\n                                            {project.description}\r\n                                        </StyledProjectInformation>\r\n                                        <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                            Read More\r\n                                        </StyledReadMore>\r\n                                        <StyledGithubLink \r\n                                            href={project.gitLink}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Github\r\n                                        </StyledGithubLink>\r\n                                    </StyledCardHoverContainer>\r\n                                </StyledProjectCard>\r\n                            )\r\n                        })\r\n                    }\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHeroTitle>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalTitle}\r\n                        </StyledModalHeroTitle>\r\n                        <StyledModalSubheader>\r\n                            Objective\r\n                        </StyledModalSubheader>\r\n                        <StyledModalHeroText>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalObjective}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} />\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const returnTabContentList = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {   \r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextListItem key={title+item}>{item}</StyledModalTabContentTextListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContentSummary = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {mapArray.map((item) => {\r\n                            return (\r\n                                <StyledModalTabContentTextSummary>\r\n                                    {item}\r\n                                </StyledModalTabContentTextSummary>\r\n                            )\r\n                        })}\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                // if 0 return case 1\r\n            }\r\n            case 1: {\r\n                return (\r\n                    returnTabContentList(\"Tech\", projectComponentCardTextConfig[showModal-1].modal.modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    returnTabContentList(\"Learnings\", projectComponentCardTextConfig[showModal-1].modal.modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    returnTabContentSummary(\"Summary\", projectComponentCardTextConfig[showModal-1].modal.modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledModalTabNavButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["128","129"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":24},{"ruleId":"134","severity":1,"message":"138","line":1,"column":26,"nodeType":"136","messageId":"137","endLine":1,"endColumn":35},{"ruleId":"134","severity":1,"message":"139","line":3,"column":86,"nodeType":"136","messageId":"137","endLine":3,"endColumn":107},{"ruleId":"134","severity":1,"message":"140","line":3,"column":109,"nodeType":"136","messageId":"137","endLine":3,"endColumn":136},{"ruleId":"134","severity":1,"message":"141","line":3,"column":138,"nodeType":"136","messageId":"137","endLine":3,"endColumn":165},{"ruleId":"134","severity":1,"message":"142","line":3,"column":191,"nodeType":"136","messageId":"137","endLine":3,"endColumn":216},{"ruleId":"143","severity":1,"message":"144","line":26,"column":8,"nodeType":"145","endLine":26,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":9,"column":17,"nodeType":"149","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":40,"column":5,"nodeType":"152","messageId":"153","endLine":58,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":203,"column":9,"nodeType":"152","messageId":"153","endLine":223,"endColumn":10},{"ruleId":"154","severity":1,"message":"155","line":207,"column":13,"nodeType":"156","messageId":"157","endLine":211,"endColumn":14},{"ruleId":"134","severity":1,"message":"158","line":3,"column":120,"nodeType":"136","messageId":"137","endLine":3,"endColumn":139},{"ruleId":"143","severity":1,"message":"159","line":59,"column":8,"nodeType":"145","endLine":59,"endColumn":10,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["163"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'StyledCommitGitLink' is defined but never used.","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [scrollTop]",{"range":"169","text":"170"},"Update the dependencies array to be: [octokit]",{"range":"171","text":"172"},[1189,1191],"[scrollTop]",[2453,2455],"[octokit]"]