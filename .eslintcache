[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js":"24","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js":"25","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js":"26","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js":"27","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":435,"mtime":1621027753457,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1792,"mtime":1625782448414,"results":"33","hashOfConfig":"30"},{"size":273,"mtime":1626032516551,"results":"34","hashOfConfig":"30"},{"size":1167,"mtime":1626041935851,"results":"35","hashOfConfig":"30"},{"size":5917,"mtime":1625803284765,"results":"36","hashOfConfig":"30"},{"size":3269,"mtime":1625217438867,"results":"37","hashOfConfig":"30"},{"size":1999,"mtime":1625223115946,"results":"38","hashOfConfig":"30"},{"size":1757,"mtime":1625221358692,"results":"39","hashOfConfig":"30"},{"size":1998,"mtime":1625803612212,"results":"40","hashOfConfig":"30"},{"size":9063,"mtime":1626056947153,"results":"41","hashOfConfig":"30"},{"size":5022,"mtime":1626056798206,"results":"42","hashOfConfig":"30"},{"size":11991,"mtime":1625963427517,"results":"43","hashOfConfig":"30"},{"size":8145,"mtime":1626032400982,"results":"44","hashOfConfig":"30"},{"size":3641,"mtime":1625964026145,"results":"45","hashOfConfig":"30"},{"size":1910,"mtime":1626032400982,"results":"46","hashOfConfig":"30"},{"size":409,"mtime":1625982760591,"results":"47","hashOfConfig":"30"},{"size":1537,"mtime":1625223095276,"results":"48","hashOfConfig":"30"},{"size":156,"mtime":1621000393565,"results":"49","hashOfConfig":"30"},{"size":515,"mtime":1621207032031,"results":"50","hashOfConfig":"30"},{"size":5568,"mtime":1625871755495,"results":"51","hashOfConfig":"30"},{"size":4676,"mtime":1626032400983,"results":"52","hashOfConfig":"30"},{"size":10625,"mtime":1625959750161,"results":"53","hashOfConfig":"30"},{"size":3505,"mtime":1625982645295,"results":"54","hashOfConfig":"30"},{"size":2389,"mtime":1625801521391,"results":"55","hashOfConfig":"30"},{"size":1280,"mtime":1626044783050,"results":"56","hashOfConfig":"30"},{"size":332,"mtime":1626032396266,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"18bafpx",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["121","122"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["123","124"],"import React, {useState, useEffect} from 'react';\r\nimport { StyledMainContainer } from './MainComponentStyles';\r\nimport { AboutComponent } from '../About/AboutComponent'\r\nimport { ContactComponent } from '../../presentational/Contact/ContactComponent';\r\nimport { HomeComponent } from '../../presentational/Home/HomeComponent'\r\nimport { ProjectsComponent } from '..//Projects/ProjectsComponent';\r\nimport { ActivityComponent } from '../../container/Activity/ActivityComponent';\r\nimport { SkillsComponent } from '../../presentational/Skills/SkillsComponent';\r\nimport { NavBar } from '../NavBar/NavComponent';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst MainComponent = () => {\r\n    // React-scroll only seems to work on id props set on plain html divs.\r\n    return (\r\n        <StyledMainContainer>\r\n\r\n            <NavBar />\r\n\r\n            <div id=\"homeSection\">\r\n                    <HomeComponent />\r\n            </div>\r\n\r\n            <div>\r\n                <Fade left>\r\n                    <SkillsComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"projectsSection\">\r\n                <Fade right>\r\n                    <ProjectsComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"aboutSection\">\r\n                <Fade left>\r\n                    <AboutComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"activitySection\">\r\n                <Fade right>\r\n                    <ActivityComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"contactSection\">\r\n                <Fade left>\r\n                    <ContactComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["125","126","127","128"],"import React from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick, StyledNameInputContainers, StyledFormikWrapper } from './ContactComponentStyles';\r\nimport emailjs from 'emailjs-com';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const ContactComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n            <ContactForm />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst ContactForm = () => {\r\n\r\n    //EmailJs\r\n    const sendEmail = (object) => {\r\n        emailjs.send(\"service_e968q22\", \"template_4k3a6so\", object, \"user_751xNiHC7Q8RBo3dQib5W\")\r\n        .then((result) => {\r\n            console.log(result.text)\r\n        }, (error) => {\r\n            console.log(error.text)\r\n        })\r\n    }\r\n\r\n    const onSubmit = (values, actions) => {\r\n        setTimeout(() => {\r\n            sendEmail(values)\r\n            actions.setSubmitting(false)\r\n          }, 1000)\r\n        \r\n        actions.resetForm();\r\n    };\r\n\r\n    return (\r\n        <StyledFormikWrapper>\r\n            <Formik\r\n                initialValues={{ formSubject: '', formEmail: '', formFName: '', formLName: '', formMessage: '' }}\r\n                onSubmit={onSubmit}\r\n\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.formSubject) {\r\n                        errors.formSubject = 'Required';\r\n                    }\r\n\r\n                    if (!values.formEmail) {\r\n                        errors.formEmail = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.formEmail)\r\n                    ) {\r\n                        errors.formEmail = 'Invalid email address';\r\n                    }\r\n\r\n                    if (!values.formFName) {\r\n                        errors.formFName = 'Required';\r\n                    }\r\n\r\n                    if (!values.formMessage) {\r\n                        errors.formMessage = 'Required';\r\n                    }\r\n                    \r\n                    return errors;\r\n                    }\r\n                }\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className='formikForm'>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formSubject'>\r\n                                Subject:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formSubject' type='text' name='formSubject' placeholder='Subject' className='contactInputField'/>\r\n                            <ErrorMessage name='formSubject' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formEmail'>\r\n                                Email:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formEmail' type='email' name='formEmail' placeholder='Email' className='contactInputField'/>\r\n                            <ErrorMessage name='formEmail' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formFName'>\r\n                                First Name:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formFName' type='text' name='formFName' placeholder='First Name' className='contactInputField'/>\r\n                                <ErrorMessage name='formFName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formLName'>\r\n                                Last Name:\r\n                            </StyledContactLabel>\r\n                                <Field id='formLName' type='text' name='formLName' placeholder='Last Name' className='contactInputField'/>\r\n                                <ErrorMessage name='formLName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formMessage'>\r\n                                Message:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formMessage' component='textarea' name='formMessage' placeholder='Message' className='contactInputField contactTextAreaField'/>\r\n                                <ErrorMessage name='formMessage' component='div' />\r\n                        </StyledContactInputContainer>\r\n\r\n                        <StyledContactSubmitButton type='submit' disabled={isSubmitting}>\r\n                            Submit\r\n                        </StyledContactSubmitButton>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </StyledFormikWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["129"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledCollapsibleNavContainer, StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledAnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faHome, faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    let scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>\r\n                    <ReactScrollLink title=\"AK\" id=\"homeSection\" underline={false} marginBottom={'0'}></ReactScrollLink>\r\n                </StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <StyledCollapsibleNavContainer>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNavLinks isOpen={isOpen}/>\r\n        </StyledCollapsibleNavContainer>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    const navBurgerAnimation = useSpring({\r\n        transform: isOpen \r\n        ? 'rotate(90deg)' \r\n        : 'rotate(0deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)} style={navBurgerAnimation}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNavLinks = ({isOpen}) => {\r\n    const navWindowAnimation = useSpring({\r\n        right: isOpen \r\n        ? '0%' \r\n        : '-50%'\r\n    })\r\n\r\n    return (\r\n        <StyledAnimatedContainer style={navWindowAnimation}>\r\n            <StyledNavigationListWrapper>\r\n                <SideBarNavigationLinks />\r\n            </StyledNavigationListWrapper>\r\n        </StyledAnimatedContainer>\r\n    )\r\n}\r\n\r\nconst SideBarNavigationLinks = () => {\r\n    return (\r\n        <StyledNavigationList>\r\n            <ReactScrollLink title=\"Home\" id=\"homeSection\" faIcon={faHome}/>\r\n            <ReactScrollLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}/>\r\n            <ReactScrollLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n            <ReactScrollLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n            <ReactScrollLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n        </StyledNavigationList>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["130"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper, StyledHomeLinkContainer, StyledHomeLinkIconTextContainer } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0, underline = true, marginBottom = '4vh'}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer marginBottom={marginBottom}>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                                <StyledAnimatedUnderline underline={underline}/>\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};\r\n\r\nexport const ReactScrollHomeLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledHomeLinkContainer>\r\n            <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                <StyledHomeLinkIconTextContainer>\r\n                    <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                    <div>\r\n                        {title}\r\n                    </div>\r\n                </StyledHomeLinkIconTextContainer>\r\n            </Link>\r\n        </StyledHomeLinkContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["131"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",["132"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["133","134"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHeroTitle, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalTabNavButton, StyledModalTabContent, StyledModalTabContentTextListItem, StyledModalSubheader,StyledModalTabContentList, StyledModalHeroText, StyledModalTabContentTextSummary } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring';\r\n\r\n// Component Cards Text config\r\nimport { projectComponentCardTextConfig } from './ProjectComponentText';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                {\r\n                   projectComponentCardTextConfig.slice(0, 2).map((project) => {\r\n                        return (\r\n                            <StyledProjectCard>\r\n                                <StyledImageCropContainer height={'40vh'}>\r\n                                    <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledCardHoverContainer>\r\n                                    <StyledProjectCardTitle>\r\n                                        {project.title}\r\n                                    </StyledProjectCardTitle>\r\n                                    <StyledProjectInformation>\r\n                                        {project.description}\r\n                                    </StyledProjectInformation>\r\n                                    <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                        Read More\r\n                                    </StyledReadMore>\r\n                                    <StyledGithubLink \r\n                                        href={project.gitLink}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Github\r\n                                    </StyledGithubLink>\r\n                                </StyledCardHoverContainer>\r\n                            </StyledProjectCard>\r\n                        )\r\n                    })\r\n                }\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    {\r\n                        projectComponentCardTextConfig.slice(2, 4).map((project) => {\r\n                            return (\r\n                                <StyledProjectCard>\r\n                                    <StyledImageCropContainer height={'40vh'}>\r\n                                        <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                    </StyledImageCropContainer>\r\n                                    <StyledCardHoverContainer>\r\n                                        <StyledProjectCardTitle>\r\n                                            {project.title}\r\n                                        </StyledProjectCardTitle>\r\n                                        <StyledProjectInformation>\r\n                                            {project.description}\r\n                                        </StyledProjectInformation>\r\n                                        <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                            Read More\r\n                                        </StyledReadMore>\r\n                                        <StyledGithubLink \r\n                                            href={project.gitLink}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Github\r\n                                        </StyledGithubLink>\r\n                                    </StyledCardHoverContainer>\r\n                                </StyledProjectCard>\r\n                            )\r\n                        })\r\n                    }\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHeroTitle>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalTitle}\r\n                        </StyledModalHeroTitle>\r\n                        <StyledModalSubheader>\r\n                            Objective\r\n                        </StyledModalSubheader>\r\n                        <StyledModalHeroText>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalObjective}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} />\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const returnTabContentList = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {   \r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextListItem key={title+item}>{item}</StyledModalTabContentTextListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContentSummary = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {mapArray.map((item) => {\r\n                            return (\r\n                                <StyledModalTabContentTextSummary>\r\n                                    {item}\r\n                                </StyledModalTabContentTextSummary>\r\n                            )\r\n                        })}\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                // if 0 return case 1\r\n            }\r\n            case 1: {\r\n                return (\r\n                    returnTabContentList(\"Tech\", projectComponentCardTextConfig[showModal-1].modal.modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    returnTabContentList(\"Learnings\", projectComponentCardTextConfig[showModal-1].modal.modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    returnTabContentSummary(\"Summary\", projectComponentCardTextConfig[showModal-1].modal.modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledModalTabNavButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["135","136"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCommitWrapper, StyledCommitTitle, StyledCommitDataWrapper, StyledCommitListContainer, StyledCommitDate, StyledCommitGitLink, StyledCommitDataContainer, StyledCommitComment, StyledCommitGitAnchor, StyledCommitListWrapper, StyledActivitySectionContainer } from './ActivityComponentStyles';\r\nimport { Octokit } from \"@octokit/core\";\r\n\r\nexport const ActivityComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <StyledActivitySectionContainer>\r\n              <StyledSectionHeader>\r\n                  Recent Activity\r\n              </StyledSectionHeader>\r\n              <StyledCommitListContainer>\r\n                  <CommitListComponent />\r\n              </StyledCommitListContainer>\r\n            </StyledActivitySectionContainer>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n//Github API Latest 5 commits to a repo\r\nconst CommitListComponent = () => {\r\n  const [apparelStoreCommits, setApparelStoreCommits] = useState(false);\r\n  const [portfolioCommits, setPortfolioCommits] = useState(false);\r\n\r\n  const octokit = new Octokit({ \r\n    auth: process.env.GIT_TOKEN \r\n  });\r\n\r\n  useEffect(() => {\r\n    const owner = '312akim',\r\n          repo1 = 'apparel-store-mern',\r\n          repo2 = 'react-portfolio-website',\r\n          perPage = 5;\r\n    \r\n    console.log(\"Height: \" + window.document.body.offsetHeight);\r\n    const fetchApparelStoreData = async () => {\r\n        const fourMostRecentApparelCommits = await octokit.request(\r\n            `GET /repos/{owner}/{repo1}/commits`, { owner, repo1, per_page: perPage }\r\n        );\r\n\r\n        setApparelStoreCommits(fourMostRecentApparelCommits);\r\n    }\r\n\r\n    const fetchPortfolioCommits = async () => {\r\n        const fourMostRecentPortfolioCommits = await octokit.request(\r\n            `GET /repos/{owner}/{repo2}/commits`, { owner, repo2, per_page: perPage }\r\n        );\r\n\r\n        setPortfolioCommits(fourMostRecentPortfolioCommits);\r\n    }\r\n\r\n    fetchApparelStoreData();\r\n    fetchPortfolioCommits();\r\n    }, [])\r\n\r\n    const commitConfig = [\r\n      { title: \"Apparel Store Commits\", api: apparelStoreCommits },\r\n      { title: \"Portfolio Site Commits\", api: portfolioCommits }\r\n    ];\r\n\r\n    return (\r\n      <StyledCommitListWrapper>\r\n        {commitConfig.map((n, index) => {\r\n          return (\r\n            <div key={index}>\r\n              {CommitComponent(n)}\r\n            </div>\r\n            )\r\n        })}\r\n      </StyledCommitListWrapper>\r\n    );\r\n}\r\n\r\nconst CommitComponent = (props) => {\r\n  return (\r\n    <StyledCommitWrapper>\r\n        <StyledCommitTitle>{props.title}</StyledCommitTitle>\r\n        <StyledCommitDataWrapper>\r\n          {!props.api ? <div>Failed to load github commit data</div> :\r\n            props.api.data.map(commit => (\r\n              <StyledCommitDataContainer key={commit.id}>\r\n                <StyledCommitDate>\r\n                  Date: {new Date(commit.commit.author.date).toLocaleDateString()}&nbsp;\r\n                </StyledCommitDate>\r\n                <StyledCommitGitAnchor href={commit.html_url} target=\"_blank\">\r\n                  Github\r\n                  </StyledCommitGitAnchor>\r\n                <StyledCommitComment>\r\n                  Comment: {commit.commit.message}\r\n                </StyledCommitComment>\r\n              </StyledCommitDataContainer>\r\n          ))}\r\n        </StyledCommitDataWrapper>\r\n    </StyledCommitWrapper>\r\n  )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"145","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"146","line":3,"column":86,"nodeType":"143","messageId":"144","endLine":3,"endColumn":107},{"ruleId":"141","severity":1,"message":"147","line":3,"column":109,"nodeType":"143","messageId":"144","endLine":3,"endColumn":136},{"ruleId":"141","severity":1,"message":"148","line":3,"column":138,"nodeType":"143","messageId":"144","endLine":3,"endColumn":165},{"ruleId":"141","severity":1,"message":"149","line":3,"column":191,"nodeType":"143","messageId":"144","endLine":3,"endColumn":216},{"ruleId":"150","severity":1,"message":"151","line":26,"column":8,"nodeType":"152","endLine":26,"endColumn":10,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":9,"column":17,"nodeType":"156","endLine":9,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":41,"column":5,"nodeType":"159","messageId":"160","endLine":59,"endColumn":6},{"ruleId":"141","severity":1,"message":"161","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":203,"column":9,"nodeType":"159","messageId":"160","endLine":223,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":207,"column":13,"nodeType":"164","messageId":"165","endLine":211,"endColumn":14},{"ruleId":"141","severity":1,"message":"166","line":3,"column":120,"nodeType":"143","messageId":"144","endLine":3,"endColumn":139},{"ruleId":"150","severity":1,"message":"167","line":55,"column":8,"nodeType":"152","endLine":55,"endColumn":10,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["171"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'css' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'StyledCommitGitLink' is defined but never used.","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [scrollTop]",{"range":"177","text":"178"},"Update the dependencies array to be: [octokit]",{"range":"179","text":"180"},[1189,1191],"[scrollTop]",[2267,2269],"[octokit]"]