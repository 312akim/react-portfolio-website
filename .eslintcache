[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":435,"mtime":1621027753457,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1614,"mtime":1622758774873,"results":"28","hashOfConfig":"25"},{"size":220,"mtime":1622783555082,"results":"29","hashOfConfig":"25"},{"size":902,"mtime":1622786373504,"results":"30","hashOfConfig":"25"},{"size":5381,"mtime":1621650185129,"results":"31","hashOfConfig":"25"},{"size":2965,"mtime":1622680579826,"results":"32","hashOfConfig":"25"},{"size":1899,"mtime":1622679928172,"results":"33","hashOfConfig":"25"},{"size":1050,"mtime":1622769916913,"results":"34","hashOfConfig":"25"},{"size":2244,"mtime":1622789146458,"results":"35","hashOfConfig":"25"},{"size":8413,"mtime":1622758768556,"results":"36","hashOfConfig":"25"},{"size":3096,"mtime":1621554049531,"results":"37","hashOfConfig":"25"},{"size":11878,"mtime":1622685613093,"results":"38","hashOfConfig":"25"},{"size":5259,"mtime":1622783713191,"results":"39","hashOfConfig":"25"},{"size":4864,"mtime":1622789053732,"results":"40","hashOfConfig":"25"},{"size":2248,"mtime":1622789060928,"results":"41","hashOfConfig":"25"},{"size":367,"mtime":1621555003442,"results":"42","hashOfConfig":"25"},{"size":1940,"mtime":1621242928092,"results":"43","hashOfConfig":"25"},{"size":156,"mtime":1621000393565,"results":"44","hashOfConfig":"25"},{"size":515,"mtime":1621207032031,"results":"45","hashOfConfig":"25"},{"size":4088,"mtime":1622775464714,"results":"46","hashOfConfig":"25"},{"size":2583,"mtime":1622775475101,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"18bafpx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["101","102"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["103","104"],"import React, {useState, useEffect} from 'react';\r\nimport { StyledMainContainer } from './MainComponentStyles';\r\nimport { AboutComponent } from '../About/AboutComponent'\r\nimport { ContactComponent } from '../../presentational/Contact/ContactComponent';\r\nimport { HomeComponent } from '../../presentational/Home/HomeComponent'\r\nimport { ProjectsComponent } from '..//Projects/ProjectsComponent';\r\nimport { ActivityComponent } from '../../container/Activity/ActivityComponent';\r\nimport { NavBar } from '../NavBar/NavComponent';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst MainComponent = () => {\r\n    // React-scroll only seems to work on id props set on plain html divs.\r\n    return (\r\n        <StyledMainContainer>\r\n\r\n            <NavBar />\r\n\r\n            <div id=\"homeSection\">\r\n                <Fade left>\r\n                    <HomeComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"projectsSection\">\r\n                <Fade right>\r\n                    <ProjectsComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"aboutSection\">\r\n                <Fade left>\r\n                    <AboutComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"activitySection\">\r\n                <Fade right>\r\n                    <ActivityComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"contactSection\">\r\n                <Fade left>\r\n                    <ContactComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["105","106","107","108","109"],"import React from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactInput, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick, StyledNameInputContainers, StyledFormikWrapper } from './ContactComponentStyles';\r\nimport emailjs from 'emailjs-com';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const ContactComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n            <ContactForm />\r\n\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst ContactForm = () => {\r\n\r\n    //EmailJs\r\n    const sendEmail = (object) => {\r\n        emailjs.send(\"service_e968q22\", \"template_4k3a6so\", object, \"user_751xNiHC7Q8RBo3dQib5W\")\r\n        .then((result) => {\r\n            console.log(result.text)\r\n        }, (error) => {\r\n            console.log(error.text)\r\n        })\r\n    }\r\n\r\n    const onSubmit = (values, actions) => {\r\n        setTimeout(() => {\r\n            sendEmail(values)\r\n            actions.setSubmitting(false)\r\n          }, 1000)\r\n        \r\n        actions.resetForm();\r\n    };\r\n\r\n    return (\r\n        <StyledFormikWrapper>\r\n            <Formik\r\n            initialValues={{ formSubject: '', formEmail: '', formFName: '', formLName: '', formMessage: '' }}\r\n            onSubmit={onSubmit}\r\n\r\n            validate={values => {\r\n            const errors = {};\r\n            if (!values.formSubject) {\r\n                errors.formSubject = 'Required';\r\n            }\r\n\r\n            if (!values.formEmail) {\r\n                errors.formEmail = 'Required';\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.formEmail)\r\n            ) {\r\n                errors.formEmail = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.formFName) {\r\n                errors.formFName = 'Required';\r\n            }\r\n\r\n            if (!values.formMessage) {\r\n                errors.formMessage = 'Required';\r\n            }\r\n            \r\n            return errors;\r\n            }}\r\n        >\r\n            {({ isSubmitting }) => (\r\n            <Form className='formikForm'>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formSubject'>\r\n                        Subject:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <Field id='formSubject' type='text' name='formSubject' placeholder='Subject' className='contactInputField'/>\r\n                    <ErrorMessage name='formSubject' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formEmail'>\r\n                        Email:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <Field id='formEmail' type='email' name='formEmail' placeholder='Email' className='contactInputField'/>\r\n                    <ErrorMessage name='formEmail' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formFName'>\r\n                        First Name:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                        <Field id='formFName' type='text' name='formFName' placeholder='First Name' className='contactInputField'/>\r\n                        <ErrorMessage name='formFName' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formLName'>\r\n                        Last Name:\r\n                    </StyledContactLabel>\r\n                        <Field id='formLName' type='text' name='formLName' placeholder='Last Name' className='contactInputField'/>\r\n                        <ErrorMessage name='formLName' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formMessage'>\r\n                        Message:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                        <Field id='formMessage' component='textarea' name='formMessage' placeholder='Message' className='contactInputField contactTextAreaField'/>\r\n                        <ErrorMessage name='formMessage' component='div' />\r\n                </StyledContactInputContainer>\r\n\r\n                <StyledContactSubmitButton type='submit' disabled={isSubmitting}>\r\n                    Submit\r\n                </StyledContactSubmitButton>\r\n            </Form>\r\n            )}\r\n        </Formik>\r\n      </StyledFormikWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["110"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledAnimatedUnderline/>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["111"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledMainHeaderContainer, \r\n    StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent,\r\n    StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} height='100vh'>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledMainHeaderContainer>\r\n          <StyledAppContainer>\r\n              <AnimatedNavigator />\r\n          </StyledAppContainer>\r\n        </StyledMainHeaderContainer>\r\n    )\r\n}\r\n\r\nconst Navigator = ({children}) => {\r\n    return (\r\n        <StyledNavigatorListContainer>\r\n            <StyledNavigatorList>{children}</StyledNavigatorList>\r\n        </StyledNavigatorListContainer>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n    const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n    \r\n    const navigatorConfig = [\r\n        { title: \"Entrepreneur at Heart\", dropdown: AchieveDropdown },\r\n        { title: \"Why I love Coding\", dropdown: CodingDropdown },\r\n        { title: \"What I hope to Achieve\", dropdown: EntrepreneurDropdown }\r\n    ];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([...activeIndices, i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        <AchieveDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        <CodingDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        <EntrepreneurDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <Navigator>\r\n                {navigatorConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                            title={n.title}\r\n                            key={index}\r\n                            index={index}\r\n                            onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                <StyledNavigatorCaret />\r\n                                )\r\n                            }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </Navigator>\r\n            {mainContent}\r\n        </>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n        \r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n\r\n//On-Hover Content\r\nconst EntrepreneurDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n            <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Achieve\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    )\r\n}\r\n\r\nconst CodingDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Love Coding\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            <div>\r\n                                Sentence 1\r\n                            </div>\r\n                            <div>\r\n                                Sentence 2\r\n                            </div>\r\n                            <div>\r\n                                Sentence 3\r\n                            </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n\r\nconst AchieveDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Entrepreneur\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n//On-Hover Content End","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["112"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainer, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHero, StyledModalText, StyledModalWrapper, StyledProjectAnimatedContainer } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport apparelStoreMockup from '../../../shared/images/apparel-store-mockup.jpg'\r\nimport tokenizeAmazonMockup from '../../../shared/images/tokenize-amazon-mockup.jpg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                \r\n                <StyledProjectCard>\r\n                    <StyledImageCropContainer height={'37vh'}>\r\n                        <StyledProjectCardImage src={tokenizeAmazonMockup}/>\r\n                    </StyledImageCropContainer>\r\n                    <StyledCardHoverContainer>\r\n                        <StyledProjectCardTitle>\r\n                            Tokenize Amazon\r\n                        </StyledProjectCardTitle>\r\n                        <StyledProjectInformation>\r\n                            Responsive Landing Page and Full website of Tokenize Amazon website.\r\n                        </StyledProjectInformation>\r\n                        <StyledReadMore onClick={() => projectModalSwitcher(1)}>\r\n                            Read More\r\n                        </StyledReadMore>\r\n                        <StyledGithubLink \r\n                            href=\"https://github.com/312akim/apparel-store-mern\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Github\r\n                        </StyledGithubLink>\r\n                    </StyledCardHoverContainer>\r\n                </StyledProjectCard>\r\n\r\n                <StyledProjectCard>\r\n                    <StyledImageCropContainer height={'37vh'}>\r\n                        <StyledProjectCardImage src={apparelStoreMockup}/>\r\n                    </StyledImageCropContainer>\r\n                    <StyledCardHoverContainer>\r\n                        <StyledProjectCardTitle>\r\n                            Apparel Store\r\n                        </StyledProjectCardTitle>\r\n                        <StyledProjectInformation>\r\n                            Responsive SPA e-commerce apparel web store template for smaller shops. Cart and checkout functionality achieved through integration with Snipcart.\r\n                        </StyledProjectInformation>\r\n                        <StyledReadMore onClick={() => projectModalSwitcher(2)}>\r\n                            Read More\r\n                        </StyledReadMore>\r\n                        <StyledGithubLink \r\n                            href=\"https://github.com/312akim/apparel-store-mern\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Github\r\n                        </StyledGithubLink>\r\n                    </StyledCardHoverContainer>\r\n                </StyledProjectCard>\r\n\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n\r\n                    <StyledProjectCard>\r\n                        <StyledImageCropContainer height={'37vh'}>\r\n                            <StyledProjectCardImage src={apparelStoreMockup}/>\r\n                        </StyledImageCropContainer>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Portfolio Website\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                Overview of this website, my personal portfolio website.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(3)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/react-portfolio-website\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n\r\n                    <StyledProjectCard>\r\n                        <StyledImageCropContainer height={'37vh'}>\r\n                            <StyledProjectCardImage src={apparelStoreMockup}/>\r\n                        </StyledImageCropContainer>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                UX Site Concepts\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                A playground showcase website displaying various animations and user experience concepts i've attempted. Constantly a work in progress.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(4)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n    switch(showModal) {\r\n        case 0:\r\n            return (\r\n                <div></div>\r\n            )\r\n        case 1:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 1111\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            <div>\r\n                                Freelance Project consisting of a Landing Page &amp; Full website.\r\n                            </div>\r\n                            <hr/>\r\n                            <div>Landing Page Key Learnings:</div>\r\n                            <ul>\r\n                                <li>Working with UI/UX Designer</li>\r\n                                <li>Email Newsletter integration via MailChimp &amp; form submission</li>\r\n                                <li>Youtube video embed &amp; video scaling</li>\r\n                                <li>PDF File opening in new tab</li>\r\n                            </ul>\r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 2:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 2222\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 3:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 3333\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 4:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 4444\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n    }\r\n}\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainer>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["113","114"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",["115","116"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",["117","118","119"],"import React from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport { StyledSectionComponent } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledHomeNavContainer, StyledNameContainer, StyledMainHeader, StyledSubHeader, StyledTextContainer, StyledTextSection, StyledHomeButtonWrapper, StyledHomeLinkButton, StyledHomeFlexContainer, StyledHomeFlexPairContainer, StyledHomeHeaderContainer, StyledHomeContentContainer, StyledHomeLinkContainer, StyledHomeLinkIconTextContainer } from './HomeComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport const HomeComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} height={'106vh'}>\r\n            <StyledHomeContentContainer>\r\n                <StyledHomeHeaderContainer>\r\n                    <HomeHero />\r\n                    <HomeNavButton />\r\n                </StyledHomeHeaderContainer>\r\n                <HomeText />\r\n            </StyledHomeContentContainer>\r\n        </StyledSectionComponent>\r\n    );\r\n}\r\n\r\nconst HomeHero = () => {\r\n    return (\r\n        <StyledNameContainer>\r\n            <StyledMainHeader>\r\n                Alex Kim\r\n            </StyledMainHeader>\r\n            <StyledSubHeader>\r\n                Web Developer\r\n            </StyledSubHeader>\r\n        </StyledNameContainer>\r\n    )\r\n}\r\n\r\nconst HomeText = () => {\r\n    return (\r\n        <StyledTextContainer>\r\n            <StyledTextSection>\r\n                Welcome to my portfolio.\r\n            </StyledTextSection>\r\n            <StyledTextSection>\r\n                I'm a front end web developer with a background in business.\r\n            </StyledTextSection>\r\n            <StyledTextSection>\r\n                I love thinking about all aspects of a company with a particular interest in animation.\r\n            </StyledTextSection>\r\n        </StyledTextContainer>\r\n    )\r\n}\r\n\r\nconst HomeNavButton = () => {\r\n    return (\r\n        <StyledHomeNavContainer>\r\n            <StyledHomeFlexContainer>\r\n                <StyledHomeLinkButton>\r\n                    <ReactScrollHomeLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}></ReactScrollHomeLink>\r\n                </StyledHomeLinkButton>\r\n            </StyledHomeFlexContainer>\r\n\r\n            <StyledHomeFlexPairContainer justifyContent={'flex-start'} margin={'0 30px 0 0'}>\r\n                <StyledHomeLinkButton>\r\n                    <ReactScrollHomeLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n                </StyledHomeLinkButton>\r\n                <StyledHomeLinkButton>\r\n                    <ReactScrollHomeLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n                </StyledHomeLinkButton>\r\n            </StyledHomeFlexPairContainer>\r\n\r\n            <StyledHomeFlexPairContainer justifyContent={'flex-end'} margin={'0 0 0 30px'}>\r\n                <StyledHomeLinkButton>\r\n                    <ReactScrollHomeLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n                </StyledHomeLinkButton>\r\n                <StyledHomeLinkButton>\r\n                    <a href=\"https://www.linkedin.com/in/alexander-kim-7441a416a/\" target=\"_blank\">LinkedIn</a>\r\n                </StyledHomeLinkButton>\r\n            </StyledHomeFlexPairContainer>\r\n        </StyledHomeNavContainer>\r\n    )\r\n}\r\n\r\nexport const ReactScrollHomeLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledHomeLinkContainer>\r\n            <a>\r\n                <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                    <StyledHomeLinkIconTextContainer>\r\n                        <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                        <div>\r\n                            {title}\r\n                        </div>\r\n                    </StyledHomeLinkIconTextContainer>\r\n                </Link>\r\n            </a>\r\n        </StyledHomeLinkContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"128","line":1,"column":26,"nodeType":"126","messageId":"127","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"129","line":3,"column":37,"nodeType":"126","messageId":"127","endLine":3,"endColumn":55},{"ruleId":"124","severity":1,"message":"130","line":3,"column":106,"nodeType":"126","messageId":"127","endLine":3,"endColumn":127},{"ruleId":"124","severity":1,"message":"131","line":3,"column":129,"nodeType":"126","messageId":"127","endLine":3,"endColumn":156},{"ruleId":"124","severity":1,"message":"132","line":3,"column":158,"nodeType":"126","messageId":"127","endLine":3,"endColumn":185},{"ruleId":"124","severity":1,"message":"133","line":3,"column":211,"nodeType":"126","messageId":"127","endLine":3,"endColumn":236},{"ruleId":"134","severity":1,"message":"135","line":9,"column":17,"nodeType":"136","endLine":9,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":40,"column":5,"nodeType":"139","messageId":"140","endLine":58,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":169,"column":5,"nodeType":"139","messageId":"140","endLine":236,"endColumn":6},{"ruleId":"124","severity":1,"message":"141","line":3,"column":120,"nodeType":"126","messageId":"127","endLine":3,"endColumn":139},{"ruleId":"142","severity":1,"message":"143","line":56,"column":8,"nodeType":"144","endLine":56,"endColumn":10,"suggestions":"145"},{"ruleId":"124","severity":1,"message":"146","line":1,"column":18,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"147","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},{"ruleId":"124","severity":1,"message":"148","line":4,"column":130,"nodeType":"126","messageId":"127","endLine":4,"endColumn":153},{"ruleId":"149","severity":1,"message":"150","line":75,"column":21,"nodeType":"136","endLine":75,"endColumn":100},{"ruleId":"134","severity":1,"message":"135","line":85,"column":13,"nodeType":"136","endLine":85,"endColumn":16},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactInput' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'StyledCommitGitLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'keyframes' is defined but never used.","'animated' is defined but never used.","'StyledHomeButtonWrapper' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [octokit]",{"range":"156","text":"157"},[2376,2378],"[octokit]"]