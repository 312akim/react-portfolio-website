[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js":"23","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js":"24","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js":"25","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js":"26","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Home\\HomeComponent.js":"27","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Home\\HomeComponentStyles.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":435,"mtime":1621027753457,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1764,"mtime":1626304597510,"results":"33","hashOfConfig":"30"},{"size":273,"mtime":1626032516551,"results":"34","hashOfConfig":"30"},{"size":1765,"mtime":1626199119873,"results":"35","hashOfConfig":"30"},{"size":5969,"mtime":1626288163265,"results":"36","hashOfConfig":"30"},{"size":3269,"mtime":1626304622001,"results":"37","hashOfConfig":"30"},{"size":1999,"mtime":1625223115946,"results":"38","hashOfConfig":"30"},{"size":1678,"mtime":1626288477658,"results":"39","hashOfConfig":"30"},{"size":879,"mtime":1626288161318,"results":"40","hashOfConfig":"30"},{"size":9094,"mtime":1626287805594,"results":"41","hashOfConfig":"30"},{"size":5099,"mtime":1626287772632,"results":"42","hashOfConfig":"30"},{"size":11795,"mtime":1626288716555,"results":"43","hashOfConfig":"30"},{"size":8903,"mtime":1626288047561,"results":"44","hashOfConfig":"30"},{"size":3814,"mtime":1626304619654,"results":"45","hashOfConfig":"30"},{"size":2059,"mtime":1626216673268,"results":"46","hashOfConfig":"30"},{"size":618,"mtime":1626133056076,"results":"47","hashOfConfig":"30"},{"size":1537,"mtime":1625223095276,"results":"48","hashOfConfig":"30"},{"size":287,"mtime":1626071553510,"results":"49","hashOfConfig":"30"},{"size":515,"mtime":1621207032031,"results":"50","hashOfConfig":"30"},{"size":10821,"mtime":1626287571724,"results":"51","hashOfConfig":"30"},{"size":3505,"mtime":1625982645295,"results":"52","hashOfConfig":"30"},{"size":2415,"mtime":1626288568723,"results":"53","hashOfConfig":"30"},{"size":1280,"mtime":1626136283327,"results":"54","hashOfConfig":"30"},{"size":332,"mtime":1626032396266,"results":"55","hashOfConfig":"30"},{"size":5568,"mtime":1626134679228,"results":"56","hashOfConfig":"30"},{"size":4676,"mtime":1626134676590,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"18bafpx",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["117","118"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["119"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["120"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledNavigatorCaret, StyledDropdownContent, StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage, StyledNavigatorContentContainer, StyledNavigatorWrapper, StyledDropdownTextLine, StyledAboutMoreContainer, StyledAboutMoreContentImage, StyledAboutMoreContentTitle, StyledAboutMoreContentTextContainer, StyledAboutMoreContentText, StyledAboutMoreContentWrapper, StyledAboutMoreContentContainer, StyledAboutMoreContentTextLine } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { aboutComponentTextConfig, aboutMoreContentConfig } from './AboutComponentText';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} minHeight={'90vh'}>\r\n            <AboutMainComponent />\r\n            <AboutMoreComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledAppContainer>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <AnimatedNavigator />\r\n        </StyledAppContainer>\r\n    )\r\n}\r\n\r\nconst NavigatorHeaderCards = ({children}) => {\r\n    return (\r\n        <StyledNavigatorList>{children}</StyledNavigatorList>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const returnDropdownText = (textObject) => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <StyledSectionSubheader>\r\n                        {textObject.title}\r\n                    </StyledSectionSubheader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            {\r\n                                textObject.text.map((line) => {\r\n                                    return (\r\n                                        <StyledDropdownTextLine>\r\n                                                {line}\r\n                                        </StyledDropdownTextLine>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    // Sets and returns dropdown Text from aboutComponentTextConfig\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[0])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[1])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[2])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const [mainContent, setMainContent] = useState(contentSetter(0));\r\n\r\n    const [activeIndices, setActiveIndices] = useState([0]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorWrapper>\r\n            <NavigatorHeaderCards>\r\n                {aboutComponentTextConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                        title={n.navTitle}\r\n                        key={index}\r\n                        index={index}\r\n                        onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                    <StyledNavigatorCaret />\r\n                                )\r\n                            }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </NavigatorHeaderCards>\r\n            <StyledNavigatorContentContainer>\r\n                {mainContent}\r\n            </StyledNavigatorContentContainer>\r\n        </StyledNavigatorWrapper>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n\r\nconst AboutMoreComponent = () => {\r\n    return (\r\n        <StyledAboutMoreContainer>\r\n            <StyledSectionSubheader>\r\n                What else am I doing?\r\n            </StyledSectionSubheader>\r\n            <AboutMoreContentMapper config={aboutMoreContentConfig} />\r\n        </StyledAboutMoreContainer>\r\n    )\r\n}\r\n\r\nconst AboutMoreContentMapper = ({config}) => {\r\n    return (\r\n        <StyledAboutMoreContentWrapper>\r\n            <Fade left>\r\n                {\r\n                    config.map(item => {\r\n                        return (\r\n                            <StyledAboutMoreContentContainer>\r\n                                <StyledImageCropContainer height='280px' width='auto' borderRadius='4px 4px 0 0' largeBorderRadius='4px 0 0 4px'>\r\n                                    <StyledAboutMoreContentImage src={item.image}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledAboutMoreContentTextContainer>\r\n                                    <StyledAboutMoreContentTitle>\r\n                                        {item.title}:\r\n                                    </StyledAboutMoreContentTitle>\r\n                                    <StyledAboutMoreContentText>\r\n\r\n                                        {\r\n                                            item.text.map(textLine => {\r\n                                                return (\r\n                                                    <StyledAboutMoreContentTextLine>\r\n                                                        {textLine}\r\n                                                    </StyledAboutMoreContentTextLine>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </StyledAboutMoreContentText>\r\n                                </StyledAboutMoreContentTextContainer>\r\n                            </StyledAboutMoreContentContainer>\r\n                        )\r\n                    })\r\n                }\r\n            </Fade>\r\n        </StyledAboutMoreContentWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["121","122"],"import React, { useState } from 'react';\r\nimport { StyledDefaultButton, StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHeroTitle, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalHeaderContainer, StyledModalTabContent, StyledModalTabContentTextListItem, StyledModalSubheader,StyledModalTabContentList, StyledModalHeroText, StyledModalTabContentTextSummary, StyledModalExitButton } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring';\r\n\r\n// Component Cards Text config\r\nimport { projectComponentCardTextConfig } from './ProjectComponentText';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal} setShowModal={setShowModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                <ProjectSectionContent sliceStart={0} sliceEnd={2} projectModalSwitcher={projectModalSwitcher} />\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    <ProjectSectionContent sliceStart={2} sliceEnd={4} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst ProjectSectionContent = ({sliceStart, sliceEnd, projectModalSwitcher}) => {\r\n    return (\r\n        <>\r\n            {\r\n                projectComponentCardTextConfig.slice(sliceStart, sliceEnd).map((project, index) => {\r\n                    return (\r\n                        <StyledProjectCard key={'ProjectCard' + index}>\r\n                            <StyledImageCropContainer height={'40vh'}>\r\n                                <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                            </StyledImageCropContainer>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    {project.title}\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    {project.description}\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href={project.gitLink}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    <FontAwesomeIcon icon={faGithub} size='2x'/>\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher, setShowModal}) => {\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHeaderContainer>\r\n                            <StyledModalHeroTitle>\r\n                                {projectComponentCardTextConfig[showModal-1].modal.modalTitle}\r\n                            </StyledModalHeroTitle>\r\n                            {   // If websiteLink exists, return visit button\r\n                                projectComponentCardTextConfig[showModal-1].websiteLink ?\r\n                                <a href={`${projectComponentCardTextConfig[showModal-1].websiteLink}`} target='_blank' rel=\"noreferrer\">\r\n                                    <StyledDefaultButton margin='0' >\r\n                                        Visit Website\r\n                                    </StyledDefaultButton>\r\n                                </a>\r\n                                :\r\n                                <div></div>\r\n                            }\r\n                        </StyledModalHeaderContainer>\r\n                        <StyledModalSubheader>\r\n                            Objective\r\n                        </StyledModalSubheader>\r\n                        <StyledModalHeroText>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalObjective}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} setShowModal={setShowModal} />\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal, setShowModal}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const returnTabContentList = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {   \r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextListItem key={title+item}>{item}</StyledModalTabContentTextListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContentSummary = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {mapArray.map((item) => {\r\n                            return (\r\n                                <StyledModalTabContentTextSummary>\r\n                                    {item}\r\n                                </StyledModalTabContentTextSummary>\r\n                            )\r\n                        })}\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                // if 0 return case 1\r\n            }\r\n            case 1: {\r\n                return (\r\n                    returnTabContentList(\"Tech\", projectComponentCardTextConfig[showModal-1].modal.modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    returnTabContentList(\"Learnings\", projectComponentCardTextConfig[showModal-1].modal.modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    returnTabContentSummary(\"Summary\", projectComponentCardTextConfig[showModal-1].modal.modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledDefaultButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledDefaultButton>\r\n                <StyledDefaultButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledDefaultButton>\r\n                <StyledDefaultButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledDefaultButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n            <StyledModalExitButton onClick={() => setShowModal(0)}>\r\n                Close\r\n            </StyledModalExitButton>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, setShowModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher} setShowModal={setShowModal}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["123"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Home\\HomeComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Home\\HomeComponentStyles.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":26,"column":8,"nodeType":"130","endLine":26,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":39,"column":5,"nodeType":"134","messageId":"135","endLine":57,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":197,"column":9,"nodeType":"134","messageId":"135","endLine":217,"endColumn":10},{"ruleId":"136","severity":1,"message":"137","line":201,"column":13,"nodeType":"138","messageId":"139","endLine":205,"endColumn":14},{"ruleId":"128","severity":1,"message":"140","line":54,"column":6,"nodeType":"130","endLine":54,"endColumn":8,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["144"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [scrollTop]",{"range":"150","text":"151"},"Update the dependencies array to be: [octokit]",{"range":"152","text":"153"},[1189,1191],"[scrollTop]",[2187,2189],"[octokit]"]