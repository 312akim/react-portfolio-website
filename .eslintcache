[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js":"24","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js":"25","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js":"26","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js":"27","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":435,"mtime":1621027753457,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1792,"mtime":1625782448414,"results":"33","hashOfConfig":"30"},{"size":273,"mtime":1626032516551,"results":"34","hashOfConfig":"30"},{"size":1765,"mtime":1626199119873,"results":"35","hashOfConfig":"30"},{"size":6104,"mtime":1626073359835,"results":"36","hashOfConfig":"30"},{"size":3269,"mtime":1625217438867,"results":"37","hashOfConfig":"30"},{"size":1999,"mtime":1625223115946,"results":"38","hashOfConfig":"30"},{"size":1757,"mtime":1625221358692,"results":"39","hashOfConfig":"30"},{"size":1513,"mtime":1626072139111,"results":"40","hashOfConfig":"30"},{"size":9124,"mtime":1626133267739,"results":"41","hashOfConfig":"30"},{"size":5106,"mtime":1626132763358,"results":"42","hashOfConfig":"30"},{"size":11743,"mtime":1626207691756,"results":"43","hashOfConfig":"30"},{"size":8908,"mtime":1626207100855,"results":"44","hashOfConfig":"30"},{"size":3835,"mtime":1626287432255,"results":"45","hashOfConfig":"30"},{"size":2059,"mtime":1626216673268,"results":"46","hashOfConfig":"30"},{"size":618,"mtime":1626133056076,"results":"47","hashOfConfig":"30"},{"size":1537,"mtime":1625223095276,"results":"48","hashOfConfig":"30"},{"size":287,"mtime":1626071553510,"results":"49","hashOfConfig":"30"},{"size":515,"mtime":1621207032031,"results":"50","hashOfConfig":"30"},{"size":5568,"mtime":1626134679228,"results":"51","hashOfConfig":"30"},{"size":4676,"mtime":1626134676590,"results":"52","hashOfConfig":"30"},{"size":10821,"mtime":1626287571724,"results":"53","hashOfConfig":"30"},{"size":3505,"mtime":1625982645295,"results":"54","hashOfConfig":"30"},{"size":2389,"mtime":1625801521391,"results":"55","hashOfConfig":"30"},{"size":1280,"mtime":1626136283327,"results":"56","hashOfConfig":"30"},{"size":332,"mtime":1626032396266,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"18bafpx",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["123","124"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["125","126"],"import React, {useState, useEffect} from 'react';\r\nimport { StyledMainContainer } from './MainComponentStyles';\r\nimport { AboutComponent } from '../About/AboutComponent'\r\nimport { ContactComponent } from '../../presentational/Contact/ContactComponent';\r\nimport { HomeComponent } from '../../presentational/Home/HomeComponent'\r\nimport { ProjectsComponent } from '..//Projects/ProjectsComponent';\r\nimport { ActivityComponent } from '../../container/Activity/ActivityComponent';\r\nimport { SkillsComponent } from '../../presentational/Skills/SkillsComponent';\r\nimport { NavBar } from '../NavBar/NavComponent';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst MainComponent = () => {\r\n    // React-scroll only seems to work on id props set on plain html divs.\r\n    return (\r\n        <StyledMainContainer>\r\n\r\n            <NavBar />\r\n\r\n            <div id=\"homeSection\">\r\n                    <HomeComponent />\r\n            </div>\r\n\r\n            <div>\r\n                <Fade left>\r\n                    <SkillsComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"projectsSection\">\r\n                <Fade right>\r\n                    <ProjectsComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"aboutSection\">\r\n                <Fade left>\r\n                    <AboutComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"activitySection\">\r\n                <Fade right>\r\n                    <ActivityComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"contactSection\">\r\n                <Fade left>\r\n                    <ContactComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["127","128","129","130","131"],"import React from 'react';\r\nimport { StyledDefaultButton, StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick, StyledNameInputContainers, StyledFormikWrapper } from './ContactComponentStyles';\r\nimport emailjs from 'emailjs-com';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const ContactComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n            <ContactForm />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst ContactForm = () => {\r\n\r\n    //EmailJs\r\n    const sendEmail = (object) => {\r\n        emailjs.send(\"service_e968q22\", \"template_4k3a6so\", object, \"user_751xNiHC7Q8RBo3dQib5W\")\r\n        .then((result) => {\r\n            console.log(result.text)\r\n        }, (error) => {\r\n            console.log(error.text)\r\n        })\r\n    }\r\n\r\n    const onSubmit = (values, actions) => {\r\n        setTimeout(() => {\r\n            sendEmail(values)\r\n            actions.setSubmitting(false)\r\n          }, 1000)\r\n        \r\n        actions.resetForm();\r\n    };\r\n\r\n    return (\r\n        <StyledFormikWrapper>\r\n            <Formik\r\n                initialValues={{ formSubject: '', formEmail: '', formFName: '', formLName: '', formMessage: '' }}\r\n                onSubmit={onSubmit}\r\n\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.formSubject) {\r\n                        errors.formSubject = 'Required';\r\n                    }\r\n\r\n                    if (!values.formEmail) {\r\n                        errors.formEmail = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.formEmail)\r\n                    ) {\r\n                        errors.formEmail = 'Invalid email address';\r\n                    }\r\n\r\n                    if (!values.formFName) {\r\n                        errors.formFName = 'Required';\r\n                    }\r\n\r\n                    if (!values.formMessage) {\r\n                        errors.formMessage = 'Required';\r\n                    }\r\n                    \r\n                    return errors;\r\n                    }\r\n                }\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className='formikForm'>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formSubject'>\r\n                                Subject:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formSubject' type='text' name='formSubject' placeholder='Subject' className='contactInputField'/>\r\n                            <ErrorMessage className='contactErrorMessage' name='formSubject' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formEmail'>\r\n                                Email:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formEmail' type='email' name='formEmail' placeholder='Email' className='contactInputField'/>\r\n                            <ErrorMessage className='contactErrorMessage' name='formEmail' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formFName'>\r\n                                First Name:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formFName' type='text' name='formFName' placeholder='First Name' className='contactInputField'/>\r\n                                <ErrorMessage className='contactErrorMessage' name='formFName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formLName'>\r\n                                Last Name:\r\n                            </StyledContactLabel>\r\n                                <Field id='formLName' type='text' name='formLName' placeholder='Last Name' className='contactInputField'/>\r\n                                <ErrorMessage className='contactErrorMessage' name='formLName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formMessage'>\r\n                                Message:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formMessage' component='textarea' name='formMessage' placeholder='Message' className='contactInputField contactTextAreaField'/>\r\n                                <ErrorMessage className='contactErrorMessage' name='formMessage' component='div' />\r\n                        </StyledContactInputContainer>\r\n\r\n                        <StyledDefaultButton margin='4vh auto' type='submit' disabled={isSubmitting}>\r\n                            Submit\r\n                        </StyledDefaultButton>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </StyledFormikWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["132"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledCollapsibleNavContainer, StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledAnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faHome, faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    let scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>\r\n                    <ReactScrollLink title=\"AK\" id=\"homeSection\" underline={false} marginBottom={'0'}></ReactScrollLink>\r\n                </StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <StyledCollapsibleNavContainer>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNavLinks isOpen={isOpen}/>\r\n        </StyledCollapsibleNavContainer>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    const navBurgerAnimation = useSpring({\r\n        transform: isOpen \r\n        ? 'rotate(90deg)' \r\n        : 'rotate(0deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)} style={navBurgerAnimation}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNavLinks = ({isOpen}) => {\r\n    const navWindowAnimation = useSpring({\r\n        right: isOpen \r\n        ? '0%' \r\n        : '-50%'\r\n    })\r\n\r\n    return (\r\n        <StyledAnimatedContainer style={navWindowAnimation}>\r\n            <StyledNavigationListWrapper>\r\n                <SideBarNavigationLinks />\r\n            </StyledNavigationListWrapper>\r\n        </StyledAnimatedContainer>\r\n    )\r\n}\r\n\r\nconst SideBarNavigationLinks = () => {\r\n    return (\r\n        <StyledNavigationList>\r\n            <ReactScrollLink title=\"Home\" id=\"homeSection\" faIcon={faHome}/>\r\n            <ReactScrollLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}/>\r\n            <ReactScrollLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n            <ReactScrollLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n            <ReactScrollLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n        </StyledNavigationList>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["133"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper, StyledHomeLinkContainer, StyledHomeLinkIconTextContainer } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0, underline = true, marginBottom = '4vh'}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer marginBottom={marginBottom}>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                                <StyledAnimatedUnderline underline={underline}/>\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};\r\n\r\nexport const ReactScrollHomeLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledHomeLinkContainer>\r\n            <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                <StyledHomeLinkIconTextContainer>\r\n                    <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                    <div>\r\n                        {title}\r\n                    </div>\r\n                </StyledHomeLinkIconTextContainer>\r\n            </Link>\r\n        </StyledHomeLinkContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["134","135"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledNavigatorCaret, StyledDropdownContent, StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage, StyledNavigatorContentContainer, StyledNavigatorWrapper, StyledDropdownTextLine, StyledAboutMoreContainer, StyledAboutMoreContentImage, StyledAboutMoreContentTitle, StyledAboutMoreContentTextContainer, StyledAboutMoreContentText, StyledAboutMoreContentWrapper, StyledAboutMoreContentContainer, StyledAboutMoreContentTextLine } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { aboutComponentTextConfig, aboutMoreContentConfig } from './AboutComponentText';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} minHeight={'90vh'}>\r\n            <AboutMainComponent />\r\n            <AboutMoreComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledAppContainer>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <AnimatedNavigator />\r\n        </StyledAppContainer>\r\n    )\r\n}\r\n\r\nconst NavigatorHeaderCards = ({children}) => {\r\n    return (\r\n        <StyledNavigatorList>{children}</StyledNavigatorList>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer largeHeight='200px' largeWidth='200px' height='100px' width='100px' position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const returnDropdownText = (textObject) => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <StyledSectionSubheader>\r\n                        {textObject.title}\r\n                    </StyledSectionSubheader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            {\r\n                                textObject.text.map((line) => {\r\n                                    return (\r\n                                        <StyledDropdownTextLine>\r\n                                                {line}\r\n                                        </StyledDropdownTextLine>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    // Sets and returns dropdown Text from aboutComponentTextConfig\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[0])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[1])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[2])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const [mainContent, setMainContent] = useState(contentSetter(0));\r\n\r\n    const [activeIndices, setActiveIndices] = useState([0]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorWrapper>\r\n            <NavigatorHeaderCards>\r\n                {aboutComponentTextConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                        title={n.navTitle}\r\n                        key={index}\r\n                        index={index}\r\n                        onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                    <StyledNavigatorCaret />\r\n                                )\r\n                            }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </NavigatorHeaderCards>\r\n            <StyledNavigatorContentContainer>\r\n                {mainContent}\r\n            </StyledNavigatorContentContainer>\r\n        </StyledNavigatorWrapper>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n\r\nconst AboutMoreComponent = () => {\r\n    return (\r\n        <StyledAboutMoreContainer>\r\n            <StyledSectionSubheader>\r\n                What else am I doing?\r\n            </StyledSectionSubheader>\r\n            <AboutMoreContentMapper config={aboutMoreContentConfig} />\r\n        </StyledAboutMoreContainer>\r\n    )\r\n}\r\n\r\nconst AboutMoreContentMapper = ({config}) => {\r\n    return (\r\n        <StyledAboutMoreContentWrapper>\r\n            <Fade left>\r\n                {\r\n                    config.map(item => {\r\n                        return (\r\n                            <StyledAboutMoreContentContainer>\r\n                                <StyledImageCropContainer height='280px' width='auto' borderRadius='4px 4px 0 0' largeBorderRadius='4px 0 0 4px'>\r\n                                    <StyledAboutMoreContentImage src={item.image}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledAboutMoreContentTextContainer>\r\n                                    <StyledAboutMoreContentTitle>\r\n                                        {item.title}:\r\n                                    </StyledAboutMoreContentTitle>\r\n                                    <StyledAboutMoreContentText>\r\n\r\n                                        {\r\n                                            item.text.map(textLine => {\r\n                                                return (\r\n                                                    <StyledAboutMoreContentTextLine>\r\n                                                        {textLine}\r\n                                                    </StyledAboutMoreContentTextLine>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                    </StyledAboutMoreContentText>\r\n                                </StyledAboutMoreContentTextContainer>\r\n                            </StyledAboutMoreContentContainer>\r\n                        )\r\n                    })\r\n                }\r\n            </Fade>\r\n        </StyledAboutMoreContentWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",["136"],"import styled, {css} from 'styled-components';\r\nimport { animated } from 'react-spring'\r\nimport { flexColumnCentered } from '../../../shared/sharedComponents/SharedStyledComponentStyles';\r\n\r\n    // Components\r\n\r\n//App Container\r\nexport const StyledAppContainer = styled.div`\r\n  ${flexColumnCentered};\r\n  background: white;\r\n`\r\n\r\nexport const StyledMainHeader = styled.div`\r\n    display: inline-block;\r\n    width: 30%;\r\n`\r\n\r\nexport const StyledNavigatorWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    width: 343px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 688px;\r\n    }\r\n`\r\n\r\nexport const StyledNavigatorContentContainer = styled.div`\r\n\r\n`\r\n\r\nexport const StyledNavigatorCaret = styled.div`\r\n    position: absolute;\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-width: 10px;\r\n    border-style: solid;\r\n    border-color: transparent transparent ${({theme}) => theme.secondaryLight};\r\n    left: calc(50% - 10px);\r\n    z-index: 1;\r\n    margin-top: 50px;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-top: 100px;\r\n    }\r\n`\r\n\r\nexport const StyledDropdownContent = styled.div`\r\n    height: 100%;\r\n`\r\n\r\nexport const StyledDropdownTextLine = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  width: 100%;\r\n  margin-bottom: 2vh;\r\n  word-break: normal;\r\n  overflow-wrap: normal;\r\n`\r\n\r\nexport const StyledDropdownSection = styled.div`\r\n\r\n  z-index: 1;\r\n  display: ${flexColumnCentered};\r\n`\r\n\r\n// Dropdown Content Container\r\nexport const StyledDropdownContainer = styled.div`\r\n  width: 343px;\r\n  padding: 0 5%;\r\n  margin-top: 3vh;\r\n  min-height: 64vh;\r\n\r\n  @media (min-width: 768px) {\r\n    min-height: 55vh;\r\n    width: 688px;\r\n    padding: 5% 15%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    min-height: 45vh;\r\n    padding: 5% 15%;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    min-height: 60vh;\r\n    padding: 5% 15%;\r\n  }\r\n`\r\n\r\n//Main Content\r\nexport const StyledMainContentContainer = styled(animated.div)`\r\n  margin-top: 8vh;\r\n`\r\n\r\n//Navigator Item\r\nexport const StyledDropdownImage = styled.img`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100px;\r\n  width: 100px;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 200px;\r\n    width: 200px;\r\n  }\r\n`\r\n\r\nexport const StyledNavigatorItemTitle = styled.div`\r\n  background: transparent;\r\n  height: 100px;\r\n  width: 100px;\r\n  overflow-wrap: break-word;\r\n  margin-bottom: 0;\r\n  margin-right: 0;\r\n  border: 0;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  padding: 15px 10px 0 10px;\r\n  text-align: center;\r\n  color: ${({theme}) => theme.primaryLight};\r\n  font-family: inherit;\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 3;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 60px 30px 0 30px;\r\n    height: 200px;\r\n    width: 200px;\r\n  }\r\n`\r\n\r\n    //Ensures onMouseLeave triggers for NavigatorItemContainer\r\nexport const StyledNavigatorContainer = styled.div`\r\n  margin-left: 0rem;\r\n  width: 70%;\r\n  margin-top: 2vh;\r\n`\r\n\r\nexport const StyledNavigatorItemContainer = styled.li`\r\n  ${flexColumnCentered};\r\n  position: relative;\r\n  margin-left: 5%;\r\n  margin-right: 5%;\r\n  z-index: 2;\r\n\r\n  img {\r\n    filter: brightness(40%);\r\n  }\r\n\r\n  :hover img {\r\n    filter: brightness(100%);\r\n  }\r\n`\r\n\r\nexport const StyledDropdownSlot = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n`\r\n\r\n//Navigator\r\nexport const StyledNavigatorList = styled.ul`\r\n  display: flex;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n`\r\n\r\n//AboutMoreComponent\r\nexport const StyledAboutMoreContainer = styled.section`\r\n\r\n`\r\n\r\nexport const StyledAboutMoreContentWrapper = styled.div`\r\n  ${flexColumnCentered};\r\n  margin-bottom: 6vh;\r\n  width: 320px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 688px;\r\n  }\r\n`\r\n\r\nexport const StyledAboutMoreContentContainer = styled.div`\r\n  ${flexColumnCentered};\r\n  margin-bottom: 2vh;\r\n  border-radius: 4px;\r\n  width: 320px;\r\n  background: ${({theme}) => theme.primaryDark};\r\n  box-shadow: 4px 4px 4px black;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    height: 280px;\r\n    width: 688px;\r\n  }\r\n\r\n\r\n`\r\n\r\nexport const StyledAboutMoreContentImage = styled.img`\r\n  width: 320px;\r\n  height: 320px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 280px;\r\n    height: 280px;\r\n  }\r\n`\r\n\r\nexport const StyledAboutMoreContentTextContainer = styled.div`\r\n  width: 250px;\r\n  padding: 5% 0;\r\n  text-align: left;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 340px;\r\n    margin: 0 5%;\r\n    padding: 2% 0;\r\n  }\r\n`\r\n\r\nexport const StyledAboutMoreContentTitle = styled.div`\r\n  border-bottom: 2px solid ${({theme}) => theme.primaryLight};\r\n  font-weight: bold;\r\n  font-size: 1.8rem;\r\n  padding-bottom: 5px;\r\n  width: 130px;\r\n  color: ${({theme}) => theme.primaryLight};\r\n`\r\n\r\nexport const StyledAboutMoreContentText = styled.div`\r\n\r\n`\r\n\r\nexport const StyledAboutMoreContentTextLine = styled.div`\r\n  font-size: 1.3rem;\r\n  margin: 5% 0;\r\n  padding: 3% 0 3% 5%;\r\n  background: ${({theme}) => theme.primaryLight};\r\n\r\n  @media (min-width: 612px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["137","138","139"],"import React, { useState } from 'react';\r\nimport { StyledDefaultButton, StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHeroTitle, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalHeaderContainer, StyledModalTabContent, StyledModalTabContentTextListItem, StyledModalSubheader,StyledModalTabContentList, StyledModalHeroText, StyledModalTabContentTextSummary, StyledModalExitButton } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring';\r\n\r\n// Component Cards Text config\r\nimport { projectComponentCardTextConfig } from './ProjectComponentText';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal} setShowModal={setShowModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                <ProjectSectionContent sliceStart={0} sliceEnd={2} projectModalSwitcher={projectModalSwitcher} />\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    <ProjectSectionContent sliceStart={2} sliceEnd={4} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst ProjectSectionContent = ({sliceStart, sliceEnd, projectModalSwitcher}) => {\r\n    return (\r\n        <>\r\n            {\r\n                projectComponentCardTextConfig.slice(sliceStart, sliceEnd).map((project) => {\r\n                    return (\r\n                        <StyledProjectCard>\r\n                            <StyledImageCropContainer height={'40vh'}>\r\n                                <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                            </StyledImageCropContainer>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    {project.title}\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    {project.description}\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href={project.gitLink}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    <FontAwesomeIcon icon={faGithub} size='2x'/>\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher, setShowModal}) => {\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHeaderContainer>\r\n                            <StyledModalHeroTitle>\r\n                                {projectComponentCardTextConfig[showModal-1].modal.modalTitle}\r\n                            </StyledModalHeroTitle>\r\n                            {   // If websiteLink exists, return visit button\r\n                                projectComponentCardTextConfig[showModal-1].websiteLink ?\r\n                                <a href={`${projectComponentCardTextConfig[showModal-1].websiteLink}`} target='_blank'>\r\n                                    <StyledDefaultButton margin='0' >\r\n                                        Visit Website\r\n                                    </StyledDefaultButton>\r\n                                </a>\r\n                                :\r\n                                <div></div>\r\n                            }\r\n                        </StyledModalHeaderContainer>\r\n                        <StyledModalSubheader>\r\n                            Objective\r\n                        </StyledModalSubheader>\r\n                        <StyledModalHeroText>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalObjective}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} setShowModal={setShowModal} />\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal, setShowModal}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const returnTabContentList = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {   \r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextListItem key={title+item}>{item}</StyledModalTabContentTextListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContentSummary = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {mapArray.map((item) => {\r\n                            return (\r\n                                <StyledModalTabContentTextSummary>\r\n                                    {item}\r\n                                </StyledModalTabContentTextSummary>\r\n                            )\r\n                        })}\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                // if 0 return case 1\r\n            }\r\n            case 1: {\r\n                return (\r\n                    returnTabContentList(\"Tech\", projectComponentCardTextConfig[showModal-1].modal.modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    returnTabContentList(\"Learnings\", projectComponentCardTextConfig[showModal-1].modal.modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    returnTabContentSummary(\"Summary\", projectComponentCardTextConfig[showModal-1].modal.modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledDefaultButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledDefaultButton>\r\n                <StyledDefaultButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledDefaultButton>\r\n                <StyledDefaultButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledDefaultButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n            <StyledModalExitButton onClick={() => setShowModal(0)}>\r\n                Close\r\n            </StyledModalExitButton>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, setShowModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher} setShowModal={setShowModal}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",["140"],"import styled, { keyframes, css } from 'styled-components';\r\nimport { animated } from 'react-spring'\r\nimport { flexColumnCentered, flexRowCentered } from '../../../shared/sharedComponents/SharedStyledComponentStyles';\r\nimport { StyledDefaultButton } from '../../../shared/sharedComponents/SectionComponentStyles';\r\n\r\n// Animations\r\nconst hoverCardTopFadeAnim = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n        transform: translateY(-20px);\r\n    }\r\n\r\n    100% {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n`\r\n\r\nconst hoverCardBotFadeAnim = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n        transform: translateY(20px);\r\n    }\r\n\r\n    100% {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n`\r\n\r\nexport const switchIconAnim = (x) => keyframes`\r\n    0% {\r\n        transform: translateX(0px);\r\n    }\r\n\r\n    50% {\r\n        transform: translateX(${x}px);\r\n    }\r\n\r\n    100%: {\r\n        transform: translateX(0px);\r\n    }\r\n`\r\n\r\nexport const fadeInAnimation = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\n// Components\r\nexport const StyledSectionContainerWrapper = styled.div`\r\n    height: auto;\r\n    padding-bottom: 4vh;\r\n`\r\n\r\nexport const StyledSectionContainerContent = styled.div`\r\n    text-align: center;\r\n    position: relative;\r\n    width: 100vw;\r\n`\r\n\r\nexport const StyledSectionIconContainer = styled.div`\r\n    display: inline-block;\r\n    color: ${({theme}) => theme.primaryLight};\r\n    height: 53vh;\r\n    margin-top: 47vh;\r\n    animation: ${switchIconAnim(7)} 1.2s linear infinite;\r\n\r\n    @media (min-width: 768px) {\r\n        color: ${({theme}) => theme.primaryLight};\r\n        animation: ${switchIconAnim(15)} 1.5s linear infinite;\r\n    }\r\n`\r\n\r\nexport const StyledProjectAnimatedContainer = styled(animated.div)`\r\n    transform-style: preserve-3d;\r\n`\r\n\r\nexport const StyledProjectCardsContainer = styled.div`\r\n    background: ${({theme}) => theme.primaryDark};\r\n`\r\n\r\nexport const StyledAltProjectCardsContainer = styled(animated.div)`\r\n    background: ${({theme}) => theme.primaryDark};\r\n    transform: rotateY(180deg);\r\n`\r\n\r\nexport const StyledSectionSwitcher = styled.div`\r\n    position: absolute;\r\n    height: 109vh;\r\n    width: 15%;\r\n    background: ${({theme}) => theme.primaryDark};\r\n    right: ${props => props.position};\r\n    z-index: 1;\r\n    \r\n    :hover div {\r\n        animation: ${switchIconAnim} 1.5s linear infinite;\r\n        color: ${({theme}) => theme.primaryLight};\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        :hover {\r\n            background: black;\r\n        }\r\n        :hover div {\r\n            animation: ${switchIconAnim} 1.5s linear infinite;\r\n            color: ${({theme}) => theme.primaryLight};\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledProjectCard = styled.div`\r\n    position: relative;\r\n    width: 60%;\r\n    max-width: 768px;\r\n    height: 40vh;\r\n    margin: 6vh auto 5vh auto;\r\n    background: white;\r\n    border-radius: 4px;\r\n    box-shadow: 6px 6px black;\r\n    border-left: 1px solid white;\r\n\r\n    @media (min-width: 480px) {\r\n        box-shadow: 7px 7px black;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n        box-shadow: 9px 9px black;\r\n    }\r\n`\r\n\r\nexport const StyledProjectCardImage = styled.img`\r\n    height: 40vh;\r\n    width: auto;\r\n    margin-left: -40%;\r\n\r\n    @media (min-width: 500px) {\r\n        margin-left: -15%;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n        margin-left: 0%;\r\n        margin-top: 0;\r\n    }\r\n`\r\n\r\nexport const StyledProjectCardTitle = styled.h2`\r\n    ${flexRowCentered};\r\n    height: 5vh;\r\n    padding: 0 0;\r\n    margin: 1vh 5%;\r\n    color: white;\r\n`\r\n\r\nexport const StyledProjectInformation = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: start;\r\n    max-height: 20vh;\r\n    margin: 0 5% 1.5vh 5%;\r\n    padding: 1%;\r\n    color: white;\r\n\r\n    @media (min-width: 480px) {\r\n        margin-bottom: 2.5vh;\r\n    }\r\n`\r\n\r\nexport const StyledReadMore = styled(StyledDefaultButton)`\r\n    height: 4vh;\r\n    margin: 0 0 1.5vh 0;\r\n    border-radius: 0px;\r\n`\r\n\r\nexport const StyledGithubLink = styled.a`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 1vh;\r\n    height: 4vh;\r\n    color: white;\r\n\r\n    :hover {\r\n        color: ${({theme}) => theme.secondaryLight};\r\n    }\r\n`\r\n\r\nexport const StyledCardHoverContainer = styled.div`\r\n    position: absolute;\r\n    ${flexColumnCentered};\r\n    top: 0px;\r\n    left: -1px;\r\n    width: 100.6%;\r\n    opacity: 0;\r\n    border-radius: 4px;\r\n    height: 40.1vh;\r\n    opacity: 0.9;\r\n    background: black;\r\n\r\n    @media (min-width: 768px) {\r\n        width: 100.4%;\r\n    }\r\n    \r\n    @media (min-width: 1025px) {\r\n        opacity: 0;\r\n        background: transparent;\r\n\r\n        :hover {\r\n            opacity: 0.9;\r\n            background: black;\r\n            \r\n            ${StyledProjectCardTitle} {\r\n                animation: ${hoverCardTopFadeAnim} 0.3s linear;\r\n            }\r\n            \r\n            ${StyledProjectInformation} {\r\n                animation: ${hoverCardTopFadeAnim} 0.3s linear;\r\n            }\r\n            \r\n            ${StyledReadMore} {\r\n                animation: ${hoverCardBotFadeAnim} 0.3s linear;\r\n            }\r\n            \r\n            ${StyledGithubLink} {\r\n                animation: ${hoverCardBotFadeAnim} 0.3s linear;\r\n            }\r\n        }\r\n    }\r\n`\r\n//Project Modals\r\nexport const StyledModalWrapper = styled.div`\r\n    height: 109vh;\r\n    position: absolute;\r\n    ${flexColumnCentered};\r\n    width: 100%;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    animation: ${fadeInAnimation} 0.5s linear;\r\n    z-index: 3;\r\n`\r\n\r\nexport const StyledModalContentContainer = styled.div`\r\n    background: ${({theme}) => theme.primaryDark};\r\n    border: 1px solid ${({theme}) => theme.primaryLight};\r\n    border-radius: 20px;\r\n    height: 102vh;\r\n    padding: 2vh 5%;\r\n    max-width: 800px;\r\n    width: 90%;\r\n\r\n    @media (min-width: 768px) {\r\n        border-radius: 0px;\r\n        height: 96vh;\r\n    }\r\n`\r\n\r\nexport const StyledModalHeroTitle = styled.h2`\r\n    color: ${({theme}) => theme.primaryLight};\r\n    height: 2vh;\r\n\r\n    @media (min-width: 480px) {\r\n    }\r\n`\r\n\r\nexport const StyledModalHeroText = styled.div`\r\n    text-align: left;\r\n    max-height: 18vh;\r\n    margin-bottom: 3vh;\r\n    padding: 1vh 0;\r\n    border-top: 1px solid white;\r\n    border-bottom: 1px solid white;\r\n`\r\n\r\nexport const StyledModalContent = styled.div`\r\n    height: 100%;\r\n    text-align: left;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    overflow-x: hidden;\r\n\r\n    @media(min-width: 768px) {\r\n        max-width: 645px;\r\n    }\r\n`\r\n\r\n\r\n// Modal Tab Nav\r\nexport const StyledModalNavWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: space-around;\r\n`\r\n\r\nexport const StyledModalNavContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    height: 10vh;\r\n    border-left: 2px solid black;\r\n    border-right: 2px solid black;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 0;\r\n        height: 0;\r\n        background: transparent;\r\n    }\r\n\r\n    @media (min-width: 628px) {\r\n        border: none;\r\n    }\r\n`\r\n\r\nexport const StyledModalExitButton = styled(StyledDefaultButton)`\r\n    background: ${({theme}) => theme.primaryAlert};\r\n    align-self: center;\r\n\r\n    :hover {\r\n        background: ${({theme}) => theme.secondaryAlert};\r\n        color: white;\r\n    }\r\n`\r\n\r\nexport const StyledModalTabContent = styled.div`\r\n    \r\n`\r\n\r\n// Modal tab content\r\nexport const StyledModalTabContentContainer = styled.div`\r\n    ${flexColumnCentered};\r\n    height: 36vh;\r\n    margin-bottom: 2vh;\r\n\r\n    @media (min-width: 480px) {\r\n        height: 44vh;\r\n        margin-bottom: 3vh;\r\n    }\r\n`\r\n\r\nexport const StyledModalHeaderContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: flex-start;\r\n    height: 15vh;\r\n`\r\n\r\nexport const StyledModalSubheader = styled.h3`\r\n    height: 2vh;\r\n    align-self: start;\r\n`\r\n\r\nexport const StyledModalTabContentList = styled.ul`\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    height: 42vh;\r\n    padding: 10px 0;\r\n    border-top: 1px solid ${({theme}) => theme.primaryLight};\r\n    border-bottom: 1px solid ${({theme}) => theme.primaryLight};\r\n\r\n    &::-webkit-scrollbar {\r\n        width: 3px;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${({theme}) => theme.secondaryDark};\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nexport const StyledModalTabContentTextListItem = styled.li`\r\n    margin-bottom: 2vh;\r\n`\r\n\r\nexport const StyledModalTabContentTextSummary = styled.div`\r\n    margin-bottom: 2vh;\r\n\r\n    @media (min-width: 768px) {\r\n        margin-bottom: 1.5vh;\r\n    }\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["141","142"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SharedStyledComponentStyles.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":1,"column":26,"nodeType":"149","messageId":"150","endLine":1,"endColumn":35},{"ruleId":"147","severity":1,"message":"152","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":35},{"ruleId":"147","severity":1,"message":"153","line":3,"column":86,"nodeType":"149","messageId":"150","endLine":3,"endColumn":107},{"ruleId":"147","severity":1,"message":"154","line":3,"column":109,"nodeType":"149","messageId":"150","endLine":3,"endColumn":136},{"ruleId":"147","severity":1,"message":"155","line":3,"column":138,"nodeType":"149","messageId":"150","endLine":3,"endColumn":165},{"ruleId":"147","severity":1,"message":"156","line":3,"column":191,"nodeType":"149","messageId":"150","endLine":3,"endColumn":216},{"ruleId":"157","severity":1,"message":"158","line":26,"column":8,"nodeType":"159","endLine":26,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":9,"column":17,"nodeType":"163","endLine":9,"endColumn":20},{"ruleId":"147","severity":1,"message":"164","line":3,"column":179,"nodeType":"149","messageId":"150","endLine":3,"endColumn":207},{"ruleId":"165","severity":1,"message":"166","line":39,"column":5,"nodeType":"167","messageId":"168","endLine":57,"endColumn":6},{"ruleId":"147","severity":1,"message":"169","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":131,"column":33,"nodeType":"163","endLine":131,"endColumn":120},{"ruleId":"165","severity":1,"message":"166","line":197,"column":9,"nodeType":"167","messageId":"168","endLine":217,"endColumn":10},{"ruleId":"172","severity":1,"message":"173","line":201,"column":13,"nodeType":"174","messageId":"175","endLine":205,"endColumn":14},{"ruleId":"147","severity":1,"message":"169","line":1,"column":29,"nodeType":"149","messageId":"150","endLine":1,"endColumn":32},{"ruleId":"147","severity":1,"message":"176","line":3,"column":120,"nodeType":"149","messageId":"150","endLine":3,"endColumn":139},{"ruleId":"157","severity":1,"message":"177","line":54,"column":6,"nodeType":"159","endLine":54,"endColumn":8,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactSubmitButton' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["181"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'StyledNavigatorListContainer' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'css' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'StyledCommitGitLink' is defined but never used.","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [scrollTop]",{"range":"187","text":"188"},"Update the dependencies array to be: [octokit]",{"range":"189","text":"190"},[1189,1191],"[scrollTop]",[2208,2210],"[octokit]"]