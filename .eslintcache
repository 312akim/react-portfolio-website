[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":357,"mtime":1621000326299,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1627,"mtime":1619468076999,"results":"27","hashOfConfig":"24"},{"size":116,"mtime":1618297053812,"results":"28","hashOfConfig":"24"},{"size":3623,"mtime":1621000789417,"results":"29","hashOfConfig":"24"},{"size":956,"mtime":1620958794630,"results":"30","hashOfConfig":"24"},{"size":5401,"mtime":1621000766539,"results":"31","hashOfConfig":"24"},{"size":2853,"mtime":1620974563088,"results":"32","hashOfConfig":"24"},{"size":1524,"mtime":1621001501861,"results":"33","hashOfConfig":"24"},{"size":1820,"mtime":1620030234469,"results":"34","hashOfConfig":"24"},{"size":702,"mtime":1620605545498,"results":"35","hashOfConfig":"24"},{"size":2359,"mtime":1621001018091,"results":"36","hashOfConfig":"24"},{"size":8404,"mtime":1621000650169,"results":"37","hashOfConfig":"24"},{"size":2875,"mtime":1621000543010,"results":"38","hashOfConfig":"24"},{"size":11405,"mtime":1621000832003,"results":"39","hashOfConfig":"24"},{"size":5389,"mtime":1621001071906,"results":"40","hashOfConfig":"24"},{"size":4646,"mtime":1621001278503,"results":"41","hashOfConfig":"24"},{"size":2114,"mtime":1621001335644,"results":"42","hashOfConfig":"24"},{"size":249,"mtime":1620434241730,"results":"43","hashOfConfig":"24"},{"size":1167,"mtime":1621001152233,"results":"44","hashOfConfig":"24"},{"size":156,"mtime":1621000393565,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"18bafpx",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["99","100"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["101","102"],"import React, {useState, useEffect} from 'react';\r\nimport { StyledMainContainer } from './MainComponentStyles';\r\nimport { AboutComponent } from '../About/AboutComponent'\r\nimport { ContactComponent } from '../../presentational/Contact/ContactComponent';\r\nimport { LandingComponent } from '../../presentational/Landing/LandingComponent';\r\nimport { ProjectsComponent } from '..//Projects/ProjectsComponent';\r\nimport { ActivityComponent } from '../../container/Activity/ActivityComponent';\r\nimport { NavBar } from '../NavBar/NavComponent';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst MainComponent = () => {\r\n    // React-scroll only seems to work on id props set on plain html divs.\r\n    return (\r\n        <StyledMainContainer>\r\n\r\n            <NavBar />\r\n\r\n            <div id=\"homeSection\">\r\n                <Fade left>\r\n                    <LandingComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"projectsSection\">\r\n                <Fade right>\r\n                    <ProjectsComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"aboutSection\">\r\n                <Fade left>\r\n                    <AboutComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"activitySection\">\r\n                <Fade right>\r\n                    <ActivityComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"contactSection\">\r\n                <Fade left>\r\n                    <ContactComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["103"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactForm, StyledContactHeaderText, StyledContactInput, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick } from './ContactComponentStyles';\r\nimport { send } from 'emailjs-com';\r\n\r\nexport const ContactComponent = () => {\r\n\r\n    const [toSend, setToSend] = useState({\r\n        formFName: '',\r\n        formLName: '',\r\n        to_name: 'Alex',\r\n        formSubject: '',\r\n        formMessage: '',\r\n        formEmail: ''\r\n    });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        send(\r\n          'service_e968q22',\r\n          'template_4k3a6so',\r\n          toSend,\r\n          'user_751xNiHC7Q8RBo3dQib5W'\r\n        )\r\n        .then((response) => {\r\n            console.log('SUCCESS!', response.status, response.text);\r\n        })\r\n        .catch((err) => {\r\n            console.log('FAILED...', err);\r\n        });\r\n\r\n        setToSend({\r\n            formFName: '',\r\n            formLName: '',\r\n            to_name: 'Alex',\r\n            formSubject: '',\r\n            formMessage: '',\r\n            formEmail: ''\r\n        })\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setToSend({ ...toSend, [e.target.name]: e.target.value });\r\n    };\r\n    \r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n\r\n            <StyledContactForm onSubmit={onSubmit}>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formSubject'>\r\n                        Subject:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <StyledContactInput\r\n                        id='formSubject' \r\n                        type='text' \r\n                        name='formSubject' \r\n                        placeholder='Subject'\r\n                        value={toSend.formSubject}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </StyledContactInputContainer>\r\n                <StyledContactFNameContainer>\r\n                    <StyledContactLabel for=\"formFName\">\r\n                        First Name:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <StyledContactInput \r\n                        id='formFName'\r\n                        type='text'\r\n                        name='formFName'\r\n                        placeholder='First Name'\r\n                        value={toSend.formFName}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </StyledContactFNameContainer>\r\n                <StyledContactLNameContainer>\r\n                    <StyledContactLabel for=\"formLName\">\r\n                        Last Name:\r\n                    </StyledContactLabel>\r\n                    <StyledContactInput \r\n                        id='formLName'\r\n                        type='text'\r\n                        name='formLName'\r\n                        placeholder='Last Name'\r\n                        value={toSend.formLName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </StyledContactLNameContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formEmail'>\r\n                        Email:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <StyledContactInput\r\n                        id='formEmail'\r\n                        type='text'\r\n                        name='formEmail'\r\n                        placeholder='Your email'\r\n                        value={toSend.formEmail}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formMessage'>\r\n                        Message:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <StyledContactTextarea\r\n                        id='formMessage'\r\n                        type='text'\r\n                        name='formMessage'\r\n                        placeholder='Your message'\r\n                        value={toSend.formMessage}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <StyledContactSubmitButton type='submit'>\r\n                        Send\r\n                    </StyledContactSubmitButton>\r\n                </StyledContactInputContainer>\r\n            </StyledContactForm>\r\n        </StyledSectionComponent>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["104"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, AnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Slide from 'react-reveal/Slide'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport {useSpring} from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    const scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>Logo Here</StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNav isOpen={isOpen} setOpen={setOpen}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNav = ({isOpen}) => {\r\n    if (isOpen) {\r\n        return (\r\n            <NavigationLinks isOpen={isOpen}/>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst NavigationLinks = ({isOpen}) => {\r\n    const props = useSpring({right: '0%', from: {right: '-100%'}})\r\n\r\n    return (\r\n        <AnimatedContainer style={props}>\r\n            <StyledNavigationListWrapper>\r\n                <StyledNavigationList>\r\n                    <ReactScrollLink title=\"Home\" id=\"homeSection\"/>\r\n                    <ReactScrollLink title=\"Projects\" id=\"projectsSection\"/>\r\n                    <ReactScrollLink title=\"About\" id=\"aboutSection\"/>\r\n                    <ReactScrollLink title=\"Activity\" id=\"activitySection\"/>\r\n                    <ReactScrollLink title=\"Contact\" id=\"contactSection\"/>\r\n                </StyledNavigationList>\r\n            </StyledNavigationListWrapper>\r\n        </AnimatedContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",["105"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js",["106"],"import styled, { keyframes } from 'styled-components';\r\n\r\n    // Components\r\n    \r\n// New animation attempt\r\nexport const StyledAnimationContainer = styled.div`\r\n    display: block;\r\n    height: 32vh;\r\n    width: 94%;\r\n    background: grey;\r\n    margin: 5% auto 0 auto;\r\n\r\n    @media (min-width: 576px) {\r\n        height: 33vh;\r\n        width: 80%;\r\n    }\r\n`\r\n\r\nexport const StyledLandingAnimNav = styled.div`\r\n    height: 80%;\r\n    width: 80%;\r\n    background: red;\r\n    margin: auto;\r\n`\r\n//New animation attempt end\r\n\r\nexport const StyledNameContainer = styled.div`\r\n    margin-top: 6vh;\r\n    height: 18vh;\r\n`\r\n\r\nexport const StyledMainHeader = styled.h1`\r\n    font-size: 54px;\r\n    font-weight: 300;\r\n    padding-right: 15%;\r\n    padding-top: 1vh;\r\n    margin: 0;\r\n    font-family: 'Noto Serif KR', serif;\r\n\r\n    @media (min-width: 768px) {\r\n        padding-top: 3vh;\r\n        font-size: 64px;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 96px;\r\n    }\r\n`\r\n\r\nexport const StyledSubHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 700;\r\n    padding-left: 15%;\r\n    margin: 0;\r\n    font-family: 'Poppins', sans-serif;\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 54px;\r\n    }\r\n`\r\n\r\nexport const StyledDialButtonContainer = styled.div`\r\n    display: block;\r\n    height: 6vh;\r\n`\r\n\r\nexport const StyledDialButton = styled.button`\r\n    display: inline-block;\r\n    margin: 2%;\r\n    color: white;\r\n    width: 15%;\r\n    background: black;\r\n    height: 80%;\r\n`\r\n\r\nexport const StyledTextContainer = styled.div`\r\n    height: 43vh;\r\n    text-align: left\r\n`\r\n\r\nexport const StyledTextSection = styled.p`\r\n    font-size: 24px;\r\n    padding-left: 15%;\r\n    padding-right: 10%;\r\n    margin-bottom: 3vh;\r\n    margin-top: 0;\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 32px;\r\n    }\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["107"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper } from './ReactScrollComponentStyles';\r\n\r\nexport const ReactScrollLink = ({id, title, delay = 0}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledAnimatedUnderline/>\r\n                        {title}\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["108","109","110","111"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledMainHeaderContainer, \r\n    StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent,\r\n    StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage } from './AboutComponentStyles';\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} height='100vh'>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledMainHeaderContainer>\r\n          <StyledAppContainer>\r\n              <AnimatedNavigator />\r\n          </StyledAppContainer>\r\n        </StyledMainHeaderContainer>\r\n    )\r\n}\r\n\r\nconst Navigator = ({children}) => {\r\n    return (\r\n        <StyledNavigatorListContainer>\r\n            <StyledNavigatorList>{children}</StyledNavigatorList>\r\n        </StyledNavigatorListContainer>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n    const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n    \r\n    const navigatorConfig = [\r\n        { title: \"Entrepreneur at Heart\", dropdown: AchieveDropdown },\r\n        { title: \"Why I love Coding\", dropdown: CodingDropdown },\r\n        { title: \"What I hope to Achieve\", dropdown: EntrepreneurDropdown }\r\n    ];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([...activeIndices, i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        <AchieveDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        <CodingDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        <EntrepreneurDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledSectionHeader>\r\n            About Me\r\n            </StyledSectionHeader>\r\n            <Navigator>\r\n                {navigatorConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                            title={n.title}\r\n                            key={index}\r\n                            index={index}\r\n                            onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                <StyledNavigatorCaret />\r\n                                )\r\n                            }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </Navigator>\r\n            {mainContent}\r\n        </>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n        \r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n\r\n//On-Hover Content\r\nconst EntrepreneurDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n            <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Achieve\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    )\r\n}\r\n\r\nconst CodingDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Love Coding\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            <div>\r\n                                Sentence 1\r\n                            </div>\r\n                            <div>\r\n                                Sentence 2\r\n                            </div>\r\n                            <div>\r\n                                Sentence 3\r\n                            </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n\r\nconst AchieveDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Entrepreneur\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n//On-Hover Content End","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["112"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainer, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHero, StyledModalText, StyledModalWrapper } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport projectPlaceholder from '../../../shared/images/apparel-store-mockup.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n        console.log(\"Section changed to: \" + section)\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                \r\n                <StyledProjectCard>\r\n                    <StyledImageCropContainer height={'37vh'}>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                    </StyledImageCropContainer>\r\n                    <StyledCardHoverContainer>\r\n                        <StyledProjectCardTitle>\r\n                            Tokenize Amazon\r\n                        </StyledProjectCardTitle>\r\n                        <StyledProjectInformation>\r\n                            Responsive Landing Page and Full website of Tokenize Amazon website.\r\n                        </StyledProjectInformation>\r\n                        <StyledReadMore onClick={() => projectModalSwitcher(1)}>\r\n                            Read More\r\n                        </StyledReadMore>\r\n                        <StyledGithubLink \r\n                            href=\"https://github.com/312akim/apparel-store-mern\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Github\r\n                        </StyledGithubLink>\r\n                    </StyledCardHoverContainer>\r\n                </StyledProjectCard>\r\n\r\n                <StyledProjectCard>\r\n                    <StyledImageCropContainer height={'37vh'}>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                    </StyledImageCropContainer>\r\n                    <StyledCardHoverContainer>\r\n                        <StyledProjectCardTitle>\r\n                            Apparel Store\r\n                        </StyledProjectCardTitle>\r\n                        <StyledProjectInformation>\r\n                            Responsive SPA e-commerce apparel web store template for smaller shops. Cart and checkout functionality achieved through integration with Snipcart.\r\n                        </StyledProjectInformation>\r\n                        <StyledReadMore onClick={() => projectModalSwitcher(2)}>\r\n                            Read More\r\n                        </StyledReadMore>\r\n                        <StyledGithubLink \r\n                            href=\"https://github.com/312akim/apparel-store-mern\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Github\r\n                        </StyledGithubLink>\r\n                    </StyledCardHoverContainer>\r\n                </StyledProjectCard>\r\n\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n\r\n                    <StyledProjectCard>\r\n                        <StyledImageCropContainer height={'37vh'}>\r\n                            <StyledProjectCardImage src={projectPlaceholder}/>\r\n                        </StyledImageCropContainer>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Portfolio Website\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                Overview of this website, my personal portfolio website.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(3)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/react-portfolio-website\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n\r\n                    <StyledProjectCard>\r\n                    <StyledImageCropContainer height={'37vh'}>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                    </StyledImageCropContainer>\r\n                    <StyledCardHoverContainer>\r\n                        <StyledProjectCardTitle>\r\n                            UX Site Concepts\r\n                        </StyledProjectCardTitle>\r\n                        <StyledProjectInformation>\r\n                            A playground showcase website displaying various animations and user experience concepts i've attempted. Constantly a work in progress.\r\n                        </StyledProjectInformation>\r\n                        <StyledReadMore onClick={() => projectModalSwitcher(4)}>\r\n                            Read More\r\n                        </StyledReadMore>\r\n                        <StyledGithubLink \r\n                            href=\"https://github.com/312akim/\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Github\r\n                        </StyledGithubLink>\r\n                    </StyledCardHoverContainer>\r\n                </StyledProjectCard>\r\n\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n    switch(showModal) {\r\n        case 0:\r\n            return (\r\n                <div></div>\r\n            )\r\n        case 1:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 1111\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            <div>\r\n                                Freelance Project consisting of a Landing Page &amp; Full website.\r\n                            </div>\r\n                            <hr/>\r\n                            <div>Landing Page Key Learnings:</div>\r\n                            <ul>\r\n                                <li>Working with UI/UX Designer</li>\r\n                                <li>Email Newsletter integration via MailChimp &amp; form submission</li>\r\n                                <li>Youtube video embed &amp; video scaling</li>\r\n                                <li>PDF File opening in new tab</li>\r\n                            </ul>\r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 2:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 2222\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 3:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 3333\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n        case 4:\r\n            return (\r\n                <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                    <StyledModalContentContainer>\r\n                        <StyledModalHero>\r\n                            Test 4444\r\n                        </StyledModalHero>\r\n                        <StyledModalText>\r\n                            \r\n                        </StyledModalText>\r\n                    </StyledModalContentContainer>\r\n                </StyledModalWrapper>\r\n            )\r\n    }\r\n}\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    return (\r\n        <>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainer>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n            </StyledSectionContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["113","114"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",["115","116"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",["117"],"import styled, { keyframes } from 'styled-components';\r\n\r\nexport const StyledReactScrollLinkContainer = styled.div`\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    margin-bottom: 3vh;\r\n    transition: padding-right 1s;\r\n    margin-left: 0%;\r\n\r\n    :hover {\r\n        padding-right: 10px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n        margin-bottom: 4vh;\r\n    }\r\n`\r\n\r\nexport const StyledAnimatedUnderline = styled.div`\r\n    position: absolute;\r\n    width: 40%;\r\n    right: 12%;\r\n    background: black;\r\n    height: 0.5vh;\r\n    margin-top: 3vh;\r\n    z-index: -1;\r\n    box-shadow: 2px 2px ${({theme}) => theme.primaryLight};\r\n    transition: width 0.5s;\r\n\r\n    @media (min-width: 1024px) {\r\n        margin-top: 2vh;\r\n        width: 29%;\r\n        right: 13%;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n        margin-top: 2vh;\r\n        width: 35%;\r\n        right: 45%;\r\n    }\r\n`\r\n\r\nexport const StyledReactScrollLinkWrapper = styled.div`\r\n    &: hover ${StyledAnimatedUnderline} {\r\n        width: 45%;\r\n\r\n        @media (min-width: 1024px) {\r\n            width: 35%;\r\n        }\r\n\r\n        @media (min-width: 1200px) {\r\n            width: 40%;\r\n        }\r\n    }\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"126","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"122","severity":1,"message":"127","line":3,"column":56,"nodeType":"124","messageId":"125","endLine":3,"endColumn":79},{"ruleId":"122","severity":1,"message":"128","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":13},{"ruleId":"122","severity":1,"message":"129","line":1,"column":18,"nodeType":"124","messageId":"125","endLine":1,"endColumn":27},{"ruleId":"122","severity":1,"message":"129","line":1,"column":18,"nodeType":"124","messageId":"125","endLine":1,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":8,"column":17,"nodeType":"132","endLine":8,"endColumn":20},{"ruleId":"122","severity":1,"message":"133","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":23},{"ruleId":"122","severity":1,"message":"134","line":7,"column":25,"nodeType":"124","messageId":"125","endLine":7,"endColumn":33},{"ruleId":"122","severity":1,"message":"135","line":7,"column":35,"nodeType":"124","messageId":"125","endLine":7,"endColumn":41},{"ruleId":"136","severity":1,"message":"137","line":41,"column":5,"nodeType":"138","messageId":"139","endLine":59,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":168,"column":5,"nodeType":"138","messageId":"139","endLine":235,"endColumn":6},{"ruleId":"122","severity":1,"message":"140","line":3,"column":120,"nodeType":"124","messageId":"125","endLine":3,"endColumn":139},{"ruleId":"141","severity":1,"message":"142","line":54,"column":8,"nodeType":"143","endLine":54,"endColumn":10,"suggestions":"144"},{"ruleId":"122","severity":1,"message":"129","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"134","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"129","line":1,"column":18,"nodeType":"124","messageId":"125","endLine":1,"endColumn":27},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactHeaderText' is defined but never used.","'Slide' is defined but never used.","'keyframes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useTransition' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'StyledCommitGitLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [octokit]",{"range":"150","text":"151"},[2214,2216],"[octokit]"]