[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\colorTheme.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Activity\\ActivityComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":202,"mtime":1612024195643,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1281,"mtime":1617903684765,"results":"24","hashOfConfig":"21"},{"size":116,"mtime":1617902875056,"results":"25","hashOfConfig":"21"},{"size":3651,"mtime":1618255089820,"results":"26","hashOfConfig":"21"},{"size":161,"mtime":1617258866362,"results":"27","hashOfConfig":"21"},{"size":670,"mtime":1618123105330,"results":"28","hashOfConfig":"21"},{"size":1736,"mtime":1616295345054,"results":"29","hashOfConfig":"21"},{"size":1638,"mtime":1614975834349,"results":"30","hashOfConfig":"21"},{"size":573,"mtime":1617902869417,"results":"31","hashOfConfig":"21"},{"size":2193,"mtime":1618255075894,"results":"32","hashOfConfig":"21"},{"size":350,"mtime":1612399977349,"results":"33","hashOfConfig":"21"},{"size":481,"mtime":1614975497486,"results":"34","hashOfConfig":"21"},{"size":409,"mtime":1617902842610,"results":"35","hashOfConfig":"21"},{"size":9004,"mtime":1618110265223,"results":"36","hashOfConfig":"21"},{"size":3051,"mtime":1618124107109,"results":"37","hashOfConfig":"21"},{"size":9633,"mtime":1617843373465,"results":"38","hashOfConfig":"21"},{"size":4653,"mtime":1618248039984,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18bafpx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["83","84"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\colorTheme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["85"],"import { Link } from 'react-scroll';\r\n\r\nexport const ReactScrollLink = ({id, title, delay = 0}) => {\r\n    return (\r\n        <li>\r\n            <a>\r\n                <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                    {title}\r\n                </Link>\r\n            </a>\r\n        </li>\r\n    )\r\n};","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Activity\\ActivityComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",["86","87"],"import COLORS from '../../../shared/design/colorTheme';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nexport const StyledContactHeaderText = styled.div`\r\n\r\n`\r\n\r\nexport const StyledContactLabel = styled.label`\r\n    \r\n`\r\n\r\nexport const StyledContactInput = styled.input`\r\n\r\n`\r\n\r\nexport const StyledContactTextarea = styled.textarea`\r\n\r\n`\r\n\r\nexport const StyledContactInputContainer = styled.div`\r\n\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["88","89","90","91"],"import React, { useState } from 'react';\r\nimport COLORS from '../../../shared/design/colorTheme';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledMainHeaderContainer, \r\n    StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent,\r\n    StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage } from './AboutComponentStyles';\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\n\r\nexport const AboutComponent = () => {\r\n    const AboutMainComponent = () => {\r\n        return (\r\n            <StyledMainHeaderContainer>\r\n              <StyledAppContainer>\r\n                  <AnimatedNavigator />\r\n              </StyledAppContainer>\r\n            </StyledMainHeaderContainer>\r\n        )\r\n    }\r\n\r\n    //On-Hover Content\r\n    const CompanyDropdown = () => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Achieve\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                        <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    const DevelopersDropdown = () => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                  <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Love Coding\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                        <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        );\r\n    };\r\n\r\n    const ProductsDropdown = () => {\r\n        return (\r\n          <StyledDropdownContainer>\r\n                  <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Entrepreneur\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                            <li>\r\n                                Loream Ipsum\r\n                            </li>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n          </StyledDropdownContainer>\r\n        );\r\n    };\r\n\r\n    const HoverImage = (props) => {\r\n        switch (props.image) {\r\n            case 0: return (\r\n                <StyledDropdownImage src={businessImage} />\r\n            )\r\n\r\n            case 1: return (\r\n                <StyledDropdownImage src={creativeImage} />\r\n            )\r\n\r\n            case 2: return (\r\n                <StyledDropdownImage src={peopleImage} />\r\n            )\r\n        }\r\n    }\r\n\r\n    //On-Hover Content End\r\n\r\n    const NavigatorItem = (props) => {\r\n        \r\n        const onMouseEnter = () => {\r\n            props.onMouseEnter(props.index);\r\n        };\r\n\r\n        const onMouseLeave = () => {\r\n            props.onMouseLeave();\r\n        }\r\n\r\n        const onMouseDown = () => {\r\n            props.onMouseDown(props.index);\r\n            console.log(\"mouse down\");\r\n        }\r\n\r\n        const onMouseUp = () => {\r\n            props.onMouseUp();\r\n            console.log(\"mouse up\");\r\n        }\r\n\r\n        return (\r\n            <StyledNavigatorContainer>\r\n                <StyledNavigatorItemContainer onMouseUp={onMouseUp} onMouseDown={onMouseDown} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} onFocus={onMouseEnter}>\r\n                    <HoverImage image={props.index}/>\r\n                    <StyledNavigatorItemTitle>\r\n                        {props.title}\r\n                    </StyledNavigatorItemTitle>\r\n                    <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n                </StyledNavigatorItemContainer>\r\n            </StyledNavigatorContainer>\r\n        );\r\n    }\r\n\r\n    const Navigator = ({onMouseLeave, children}) => {\r\n        return (\r\n            <StyledNavigatorListContainer onMouseLeave={onMouseLeave}>\r\n                <StyledNavigatorList>{children}</StyledNavigatorList>\r\n            </StyledNavigatorListContainer>\r\n        )\r\n    }\r\n\r\n    const AnimatedNavigator = () => {\r\n        const [mainContent, setMainContent] = useState(\r\n            <div></div>\r\n        );\r\n        const [activeIndices, setActiveIndices] = useState([]);\r\n        const [animationSwitch, setAnimationSwitch] = useState(true);\r\n\r\n        const currentIndex = activeIndices[activeIndices.length -1];\r\n        \r\n        const navigatorConfig = [\r\n            { title: \"Entrepreneur at Heart\", dropdown: ProductsDropdown, image: businessImage },\r\n            { title: \"Why I love Coding\", dropdown: DevelopersDropdown },\r\n            { title: \"What I hope to Achieve\", dropdown: CompanyDropdown }\r\n        ];\r\n\r\n        const navigatorSelectFunction = (i) => {\r\n            setActiveIndices([...activeIndices, i]);\r\n            setMainContent(contentSetter(i));\r\n            setAnimationSwitch(!animationSwitch);\r\n        }\r\n\r\n        const onMouseEnter = i => {\r\n            navigatorSelectFunction(i);\r\n        };\r\n\r\n        const onMouseDown = i => {\r\n            onMouseEnter(i);\r\n        }\r\n\r\n        const onMouseLeave = () => {\r\n            setAnimationSwitch(!animationSwitch);\r\n        }\r\n\r\n        const onMouseUp = () => {\r\n            setAnimationSwitch(!animationSwitch);\r\n        }\r\n        \r\n        const contentSetter = (index) => {\r\n            switch(index) {\r\n                case 0: return (\r\n                    <StyledMainContentContainer key={0} animation={animationSwitch}>\r\n                        <ProductsDropdown />\r\n                    </StyledMainContentContainer>\r\n                )\r\n                case 1: return (\r\n                    <StyledMainContentContainer key={1} animation={animationSwitch}>\r\n                        <DevelopersDropdown />\r\n                    </StyledMainContentContainer>\r\n                )\r\n                case 2: return (\r\n                    <StyledMainContentContainer key={2} animation={animationSwitch}>\r\n                        <CompanyDropdown />\r\n                    </StyledMainContentContainer>\r\n                )\r\n                default: return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n          <>\r\n            <StyledSectionHeader>\r\n              About Me\r\n            </StyledSectionHeader>\r\n            <Navigator>\r\n              {navigatorConfig.map((n, index) => {\r\n                return (\r\n                  <NavigatorItem\r\n                    title={n.title}\r\n                    key={index}\r\n                    index={index}\r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onMouseDown={onMouseDown}\r\n                    onMouseUp={onMouseUp}\r\n                  >\r\n                    {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                        currentIndex === index && (\r\n                        <StyledNavigatorCaret />\r\n                        )\r\n                    }\r\n                  </NavigatorItem>\r\n                );\r\n              })}\r\n            </Navigator>\r\n            {mainContent}\r\n          </>\r\n        );\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={COLORS.primaryLight} height='100vh'>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["92"],"import React, { useState } from 'react';\r\nimport COLORS from '../../../shared/design/colorTheme';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledGithubLink, StyledModalContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainer, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHero } from './ProjectsComponentStyles';\r\nimport projectPlaceholder from '../../../shared/images/project-placeholder.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n        console.log(\"Section changed to: \" + section)\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Which projects page to display\r\n    const ProjectSection = () => {\r\n        if (section) {\r\n            return (\r\n                <StyledProjectCardsContainer>\r\n                    <StyledProjectCard>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Apparel Store\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                Responsive SPA e-commerce apparel web store meant to act as a template for smaller shops. Cart and checkout functionality achieved through integration with Snipcart.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(1)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/apparel-store-mern\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n                    <StyledProjectCard>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Animation/UX Concepts\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                A playground showcase website displaying various animations and user experience concepts i've attempted. Constantly a work in progress.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(2)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n                </StyledProjectCardsContainer>\r\n            )\r\n        } else {\r\n            if (!section) {\r\n                return (\r\n                    <StyledAltProjectCardsContainer>\r\n                        <StyledProjectCard>\r\n                            <StyledProjectCardImage src={projectPlaceholder}/>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    Portfolio Website\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    Overview of this website, my personal portfolio website.\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(3)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href=\"https://github.com/312akim/react-portfolio-website\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                        <StyledProjectCard>\r\n                            <StyledProjectCardImage src={projectPlaceholder}/>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    FitBrews React Website\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    A healthy drink recipe created under Nucamp's Bootcamp. I partnered with a classmate to code and design through weekly meetings. Array methods were heavily utilized.\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(4)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href=\"https://github.com/stevenCsaunders/fit-brews-react\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                    </StyledAltProjectCardsContainer>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    // Project Section Display Switcher & arrow icon\r\n    const SectionSwitcher = () => {\r\n        if (section) {\r\n            return (\r\n                <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                    <StyledSectionIconContainer>\r\n                        <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                    </StyledSectionIconContainer>\r\n                </StyledSectionSwitcher>\r\n            )\r\n        } else {\r\n            return (\r\n                <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                    <StyledSectionIconContainer>\r\n                        <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                    </StyledSectionIconContainer>\r\n                </StyledSectionSwitcher>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Modal Display\r\n    const ModalDisplay = () => {\r\n        switch(showModal) {\r\n            case 0:\r\n                return (\r\n                    <div></div>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 1111\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 2222\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 3:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 3333\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 4:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 4444\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    // Body\r\n    const SectionContainer = () => {\r\n        return (\r\n            <>\r\n                <SectionSwitcher />\r\n                <StyledSectionContainer>\r\n                    {ModalDisplay()}\r\n                    <StyledSectionHeader>\r\n                        Projects\r\n                    </StyledSectionHeader>\r\n                    <ProjectSection />\r\n                </StyledSectionContainer>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={COLORS.primaryDark}>\r\n            <SectionContainer />\r\n        </StyledSectionComponent>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":6,"column":13,"nodeType":"99","endLine":6,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":23},{"ruleId":"100","severity":1,"message":"106","line":8,"column":25,"nodeType":"102","messageId":"103","endLine":8,"endColumn":33},{"ruleId":"100","severity":1,"message":"107","line":8,"column":35,"nodeType":"102","messageId":"103","endLine":8,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":101,"column":9,"nodeType":"110","messageId":"111","endLine":113,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":146,"column":9,"nodeType":"110","messageId":"111","endLine":183,"endColumn":10},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'COLORS' is defined but never used.","Identifier","unusedVar","'keyframes' is defined but never used.","'useTransition' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]