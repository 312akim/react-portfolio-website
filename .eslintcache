[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\colorTheme.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Activity\\ActivityComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":202,"mtime":1612024195643,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1612,"mtime":1618297058570,"results":"24","hashOfConfig":"21"},{"size":116,"mtime":1618297053812,"results":"25","hashOfConfig":"21"},{"size":3668,"mtime":1618297279530,"results":"26","hashOfConfig":"21"},{"size":161,"mtime":1617258866362,"results":"27","hashOfConfig":"21"},{"size":670,"mtime":1618123105330,"results":"28","hashOfConfig":"21"},{"size":1736,"mtime":1616295345054,"results":"29","hashOfConfig":"21"},{"size":2279,"mtime":1618445323911,"results":"30","hashOfConfig":"21"},{"size":694,"mtime":1618444240635,"results":"31","hashOfConfig":"21"},{"size":1619,"mtime":1618297328681,"results":"32","hashOfConfig":"21"},{"size":350,"mtime":1612399977349,"results":"33","hashOfConfig":"21"},{"size":481,"mtime":1614975497486,"results":"34","hashOfConfig":"21"},{"size":409,"mtime":1617902842610,"results":"35","hashOfConfig":"21"},{"size":8775,"mtime":1618294804225,"results":"36","hashOfConfig":"21"},{"size":2760,"mtime":1618294173640,"results":"37","hashOfConfig":"21"},{"size":9664,"mtime":1618294423473,"results":"38","hashOfConfig":"21"},{"size":4653,"mtime":1618248039984,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18bafpx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["85","86"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\colorTheme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["87"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledNavPlaceholder } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    const scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, [scrollTop]);\r\n\r\n    const CollapsibleNav = ({isOpen}) => {\r\n        if (isOpen) {\r\n            return (\r\n                <NavigationLinks />\r\n            )\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const NavBarToggler = () => {\r\n        return (\r\n            <StyledToggler onClick={() => setOpen(!isOpen)}>\r\n                ToggleNav\r\n            </StyledToggler>\r\n        )\r\n    }\r\n\r\n    const NavigationLinks = () => {\r\n        return (\r\n            <StyledNavigationList>\r\n                <ReactScrollLink title=\"Home\" id=\"homeSection\"/>\r\n                <ReactScrollLink title=\"Projects\" id=\"projectsSection\"/>\r\n                <ReactScrollLink title=\"About\" id=\"aboutSection\"/>\r\n                <ReactScrollLink title=\"Activity\" id=\"activitySection\"/>\r\n                <ReactScrollLink title=\"Contact\" id=\"contactSection\"/>\r\n            </StyledNavigationList>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>Logo Here</StyledNavLogo>\r\n                <NavBarToggler />\r\n                <CollapsibleNav isOpen={isOpen}>\r\n                    <NavigationLinks/>\r\n                </CollapsibleNav>\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Landing\\LandingComponentStyles.js",["88"],"import styled, { keyframes } from 'styled-components';\r\n\r\n    // Components\r\n    \r\n// New animation attempt\r\nexport const StyledAnimationContainer = styled.div`\r\n    display: block;\r\n    height: 32vh;\r\n    width: 94%;\r\n    background: grey;\r\n    margin: 5% auto 0 auto;\r\n\r\n    @media (min-width: 576px) {\r\n        height: 33vh;\r\n        width: 80%;\r\n    }\r\n`\r\n\r\nexport const StyledLandingAnimNav = styled.div`\r\n    height: 80%;\r\n    width: 80%;\r\n    background: red;\r\n    margin: auto;\r\n`\r\n//New animation attempt end\r\n\r\nexport const StyledNameContainer = styled.div`\r\n    margin-top: 6vh;\r\n    height: 18vh;\r\n`\r\n\r\nexport const StyledMainHeader = styled.h1`\r\n    font-size: 64px;\r\n    font-weight: 300;\r\n    padding-right: 15%;\r\n    margin: 0;\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 96px;\r\n    }\r\n`\r\n\r\nexport const StyledSubHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 700;\r\n    padding-left: 15%;\r\n    margin: 0;\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 54px;\r\n    }\r\n`\r\n\r\nexport const StyledDialButtonContainer = styled.div`\r\n    display: block;\r\n    height: 6vh;\r\n`\r\n\r\nexport const StyledDialButton = styled.button`\r\n    display: inline-block;\r\n    margin: 2%;\r\n    color: white;\r\n    width: 15%;\r\n    background: black;\r\n    height: 80%;\r\n`\r\n\r\nexport const StyledTextContainer = styled.div`\r\n    height: 43vh;\r\n    text-align: left\r\n`\r\n\r\nexport const StyledTextSection = styled.p`\r\n    font-size: 24px;\r\n    padding-left: 15%;\r\n    padding-right: 10%;\r\n    margin-bottom: 3vh;\r\n    margin-top: 0;\r\n\r\n    @media (min-width: 1200px) {\r\n        font-size: 32px;\r\n    }\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["89"],"import { Link } from 'react-scroll';\r\n\r\nexport const ReactScrollLink = ({id, title, delay = 0}) => {\r\n    return (\r\n        <li>\r\n            <a>\r\n                <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                    {title}\r\n                </Link>\r\n            </a>\r\n        </li>\r\n    )\r\n};","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Activity\\ActivityComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",["90","91"],"import COLORS from '../../../shared/design/colorTheme';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nexport const StyledContactHeaderText = styled.div`\r\n\r\n`\r\n\r\nexport const StyledContactLabel = styled.label`\r\n    \r\n`\r\n\r\nexport const StyledContactInput = styled.input`\r\n\r\n`\r\n\r\nexport const StyledContactTextarea = styled.textarea`\r\n\r\n`\r\n\r\nexport const StyledContactInputContainer = styled.div`\r\n\r\n`","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport COLORS from '../../../shared/design/colorTheme';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledMainHeaderContainer, \r\n    StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent,\r\n    StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage } from './AboutComponentStyles';\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nexport const AboutComponent = () => {\r\n    const AboutMainComponent = () => {\r\n        return (\r\n            <StyledMainHeaderContainer>\r\n              <StyledAppContainer>\r\n                  <AnimatedNavigator />\r\n              </StyledAppContainer>\r\n            </StyledMainHeaderContainer>\r\n        )\r\n    }\r\n\r\n    //On-Hover Content\r\n    const EntrepreneurDropdown = () => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Achieve\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                            <Fade up cascade big>\r\n                                    <div>\r\n                                        Sentence 1\r\n                                    </div>\r\n                                    <div>\r\n                                        Sentence 2\r\n                                    </div>\r\n                                    <div>\r\n                                        Sentence 3\r\n                                    </div>\r\n                            </Fade>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    const CodingDropdown = () => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                  <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Love Coding\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                            <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                            </Fade>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        );\r\n    };\r\n\r\n    const AchieveDropdown = () => {\r\n        return (\r\n          <StyledDropdownContainer>\r\n                  <StyledDropdownSection>\r\n                    <div>\r\n                        <StyledDropdownHeader>\r\n                            Entrepreneur\r\n                        </StyledDropdownHeader>\r\n                        <StyledDropdownContent>\r\n                            <Fade up cascade big>\r\n                                    <div>\r\n                                        Sentence 1\r\n                                    </div>\r\n                                    <div>\r\n                                        Sentence 2\r\n                                    </div>\r\n                                    <div>\r\n                                        Sentence 3\r\n                                    </div>\r\n                            </Fade>\r\n                        </StyledDropdownContent>\r\n                    </div>\r\n                </StyledDropdownSection>\r\n          </StyledDropdownContainer>\r\n        );\r\n    };\r\n\r\n    const HoverImage = (props) => {\r\n        switch (props.image) {\r\n            case 0: return (\r\n                <StyledDropdownImage src={businessImage} />\r\n            )\r\n\r\n            case 1: return (\r\n                <StyledDropdownImage src={creativeImage} />\r\n            )\r\n\r\n            case 2: return (\r\n                <StyledDropdownImage src={peopleImage} />\r\n            )\r\n        }\r\n    }\r\n\r\n    //On-Hover Content End\r\n\r\n    const NavigatorItem = (props) => {\r\n        \r\n        const onMouseEnter = () => {\r\n            props.onMouseEnter(props.index);\r\n        };\r\n\r\n        return (\r\n            <StyledNavigatorContainer>\r\n                <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                    <HoverImage image={props.index}/>\r\n                    <StyledNavigatorItemTitle>\r\n                        {props.title}\r\n                    </StyledNavigatorItemTitle>\r\n                    <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n                </StyledNavigatorItemContainer>\r\n            </StyledNavigatorContainer>\r\n        );\r\n    }\r\n\r\n    const Navigator = ({children}) => {\r\n        return (\r\n            <StyledNavigatorListContainer>\r\n                <StyledNavigatorList>{children}</StyledNavigatorList>\r\n            </StyledNavigatorListContainer>\r\n        )\r\n    }\r\n\r\n    const AnimatedNavigator = () => {\r\n        const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n        const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n        const currentIndex = activeIndices[activeIndices.length -1];\r\n        \r\n        const navigatorConfig = [\r\n            { title: \"Entrepreneur at Heart\", dropdown: AchieveDropdown },\r\n            { title: \"Why I love Coding\", dropdown: CodingDropdown },\r\n            { title: \"What I hope to Achieve\", dropdown: EntrepreneurDropdown }\r\n        ];\r\n\r\n        const navigatorSelectFunction = (i) => {\r\n            setActiveIndices([...activeIndices, i]);\r\n            setMainContent(contentSetter(i));\r\n        }\r\n\r\n        const onMouseEnter = i => {\r\n            navigatorSelectFunction(i);\r\n        };\r\n\r\n        const contentSetter = (index) => {\r\n            switch(index) {\r\n                case 0: return (\r\n                    <StyledMainContentContainer key={0}>\r\n                        <Fade down>\r\n                            <AchieveDropdown />\r\n                        </Fade>\r\n                    </StyledMainContentContainer>\r\n                )\r\n                case 1: return (\r\n                    <StyledMainContentContainer key={1}>\r\n                        <Fade down>\r\n                            <CodingDropdown />\r\n                        </Fade>\r\n                    </StyledMainContentContainer>\r\n                )\r\n                case 2: return (\r\n                    <StyledMainContentContainer key={2}>\r\n                        <Fade down>\r\n                            <EntrepreneurDropdown />\r\n                        </Fade>\r\n                    </StyledMainContentContainer>\r\n                )\r\n                default: return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <StyledSectionHeader>\r\n                About Me\r\n                </StyledSectionHeader>\r\n                <Navigator>\r\n                    {navigatorConfig.map((n, index) => {\r\n                        return (\r\n                            <NavigatorItem\r\n                                title={n.title}\r\n                                key={index}\r\n                                index={index}\r\n                                onMouseEnter={onMouseEnter}\r\n                            >\r\n                                {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                    currentIndex === index && (\r\n                                    <StyledNavigatorCaret />\r\n                                    )\r\n                                }\r\n                            </NavigatorItem>\r\n                        );\r\n                    })}\r\n                </Navigator>\r\n                {mainContent}\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={COLORS.primaryLight} height='100vh'>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["96","97"],"import React, { useState } from 'react';\r\nimport COLORS from '../../../shared/design/colorTheme';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledGithubLink, StyledModalContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainer, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHero } from './ProjectsComponentStyles';\r\nimport projectPlaceholder from '../../../shared/images/project-placeholder.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n        console.log(\"Section changed to: \" + section)\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Which projects page to display\r\n    const ProjectSection = () => {\r\n        if (section) {\r\n            return (\r\n                <StyledProjectCardsContainer>\r\n                    <StyledProjectCard>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Apparel Store\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                Responsive SPA e-commerce apparel web store meant to act as a template for smaller shops. Cart and checkout functionality achieved through integration with Snipcart.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(1)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/apparel-store-mern\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n                    <StyledProjectCard>\r\n                        <StyledProjectCardImage src={projectPlaceholder}/>\r\n                        <StyledCardHoverContainer>\r\n                            <StyledProjectCardTitle>\r\n                                Animation/UX Concepts\r\n                            </StyledProjectCardTitle>\r\n                            <StyledProjectInformation>\r\n                                A playground showcase website displaying various animations and user experience concepts i've attempted. Constantly a work in progress.\r\n                            </StyledProjectInformation>\r\n                            <StyledReadMore onClick={() => projectModalSwitcher(2)}>\r\n                                Read More\r\n                            </StyledReadMore>\r\n                            <StyledGithubLink \r\n                                href=\"https://github.com/312akim/\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Github\r\n                            </StyledGithubLink>\r\n                        </StyledCardHoverContainer>\r\n                    </StyledProjectCard>\r\n                </StyledProjectCardsContainer>\r\n            )\r\n        } else {\r\n            if (!section) {\r\n                return (\r\n                    <StyledAltProjectCardsContainer>\r\n                        <StyledProjectCard>\r\n                            <StyledProjectCardImage src={projectPlaceholder}/>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    Portfolio Website\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    Overview of this website, my personal portfolio website.\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(3)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href=\"https://github.com/312akim/react-portfolio-website\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                        <StyledProjectCard>\r\n                            <StyledProjectCardImage src={projectPlaceholder}/>\r\n                            <StyledCardHoverContainer>\r\n                                <StyledProjectCardTitle>\r\n                                    FitBrews React Website\r\n                                </StyledProjectCardTitle>\r\n                                <StyledProjectInformation>\r\n                                    A healthy drink recipe created under Nucamp's Bootcamp. I partnered with a classmate to code and design through weekly meetings. Array methods were heavily utilized.\r\n                                </StyledProjectInformation>\r\n                                <StyledReadMore onClick={() => projectModalSwitcher(4)}>\r\n                                    Read More\r\n                                </StyledReadMore>\r\n                                <StyledGithubLink \r\n                                    href=\"https://github.com/stevenCsaunders/fit-brews-react\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    Github\r\n                                </StyledGithubLink>\r\n                            </StyledCardHoverContainer>\r\n                        </StyledProjectCard>\r\n                    </StyledAltProjectCardsContainer>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    // Project Section Display Switcher & arrow icon\r\n    const SectionSwitcher = () => {\r\n        if (section) {\r\n            return (\r\n                <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                    <StyledSectionIconContainer>\r\n                        <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                    </StyledSectionIconContainer>\r\n                </StyledSectionSwitcher>\r\n            )\r\n        } else {\r\n            return (\r\n                <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                    <StyledSectionIconContainer>\r\n                        <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                    </StyledSectionIconContainer>\r\n                </StyledSectionSwitcher>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Modal Display\r\n    const ModalDisplay = () => {\r\n        switch(showModal) {\r\n            case 0:\r\n                return (\r\n                    <div></div>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 1111\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 2222\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 3:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 3333\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n            case 4:\r\n                return (\r\n                    <StyledModalContainer onClick={() => projectModalSwitcher(0)}>\r\n                        <StyledModalHero>\r\n                            Test 4444\r\n                        </StyledModalHero>\r\n                    </StyledModalContainer>\r\n                )\r\n        }\r\n    }\r\n\r\n    // Body\r\n    const SectionContainer = () => {\r\n        return (\r\n            <>\r\n                <SectionSwitcher />\r\n                <StyledSectionContainer>\r\n                    {ModalDisplay()}\r\n                    <StyledSectionHeader>\r\n                        Projects\r\n                    </StyledSectionHeader>\r\n                    <ProjectSection />\r\n                </StyledSectionContainer>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={COLORS.primaryDark}>\r\n            <SectionContainer />\r\n        </StyledSectionComponent>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":96,"nodeType":"104","messageId":"105","endLine":2,"endColumn":116},{"ruleId":"102","severity":1,"message":"106","line":1,"column":18,"nodeType":"104","messageId":"105","endLine":1,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":6,"column":13,"nodeType":"109","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"111","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":23},{"ruleId":"102","severity":1,"message":"112","line":8,"column":25,"nodeType":"104","messageId":"105","endLine":8,"endColumn":33},{"ruleId":"102","severity":1,"message":"113","line":8,"column":35,"nodeType":"104","messageId":"105","endLine":8,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":108,"column":9,"nodeType":"116","messageId":"117","endLine":120,"endColumn":10},{"ruleId":"102","severity":1,"message":"118","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":147,"column":9,"nodeType":"116","messageId":"117","endLine":184,"endColumn":10},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'StyledNavPlaceholder' is defined but never used.","Identifier","unusedVar","'keyframes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'COLORS' is defined but never used.","'useTransition' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Fade' is defined but never used.","no-global-assign","no-unsafe-negation"]