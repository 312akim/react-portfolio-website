[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js":"24","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js":"25","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js":"26","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":435,"mtime":1621027753457,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":1792,"mtime":1625782448414,"results":"32","hashOfConfig":"29"},{"size":220,"mtime":1622783555082,"results":"33","hashOfConfig":"29"},{"size":982,"mtime":1625733071268,"results":"34","hashOfConfig":"29"},{"size":5937,"mtime":1624828916692,"results":"35","hashOfConfig":"29"},{"size":3269,"mtime":1625217438867,"results":"36","hashOfConfig":"29"},{"size":1999,"mtime":1625223115946,"results":"37","hashOfConfig":"29"},{"size":1757,"mtime":1625221358692,"results":"38","hashOfConfig":"29"},{"size":2244,"mtime":1624316757287,"results":"39","hashOfConfig":"29"},{"size":6687,"mtime":1625733215878,"results":"40","hashOfConfig":"29"},{"size":3842,"mtime":1625732901334,"results":"41","hashOfConfig":"29"},{"size":11991,"mtime":1624505429298,"results":"42","hashOfConfig":"29"},{"size":8327,"mtime":1625548287716,"results":"43","hashOfConfig":"29"},{"size":4889,"mtime":1625801667550,"results":"44","hashOfConfig":"29"},{"size":1863,"mtime":1625802665252,"results":"45","hashOfConfig":"29"},{"size":367,"mtime":1625546893771,"results":"46","hashOfConfig":"29"},{"size":1537,"mtime":1625223095276,"results":"47","hashOfConfig":"29"},{"size":156,"mtime":1621000393565,"results":"48","hashOfConfig":"29"},{"size":515,"mtime":1621207032031,"results":"49","hashOfConfig":"29"},{"size":5042,"mtime":1625782610860,"results":"50","hashOfConfig":"29"},{"size":4118,"mtime":1625782636895,"results":"51","hashOfConfig":"29"},{"size":10258,"mtime":1624921678024,"results":"52","hashOfConfig":"29"},{"size":2815,"mtime":1625200516198,"results":"53","hashOfConfig":"29"},{"size":2389,"mtime":1625801521391,"results":"54","hashOfConfig":"29"},{"size":1240,"mtime":1625801445823,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"18bafpx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["116","117"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["118","119"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["120","121","122","123","124"],"import React from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactInput, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick, StyledNameInputContainers, StyledFormikWrapper } from './ContactComponentStyles';\r\nimport emailjs from 'emailjs-com';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const ContactComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n            <ContactForm />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst ContactForm = () => {\r\n\r\n    //EmailJs\r\n    const sendEmail = (object) => {\r\n        emailjs.send(\"service_e968q22\", \"template_4k3a6so\", object, \"user_751xNiHC7Q8RBo3dQib5W\")\r\n        .then((result) => {\r\n            console.log(result.text)\r\n        }, (error) => {\r\n            console.log(error.text)\r\n        })\r\n    }\r\n\r\n    const onSubmit = (values, actions) => {\r\n        setTimeout(() => {\r\n            sendEmail(values)\r\n            actions.setSubmitting(false)\r\n          }, 1000)\r\n        \r\n        actions.resetForm();\r\n    };\r\n\r\n    return (\r\n        <StyledFormikWrapper>\r\n            <Formik\r\n                initialValues={{ formSubject: '', formEmail: '', formFName: '', formLName: '', formMessage: '' }}\r\n                onSubmit={onSubmit}\r\n\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.formSubject) {\r\n                        errors.formSubject = 'Required';\r\n                    }\r\n\r\n                    if (!values.formEmail) {\r\n                        errors.formEmail = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.formEmail)\r\n                    ) {\r\n                        errors.formEmail = 'Invalid email address';\r\n                    }\r\n\r\n                    if (!values.formFName) {\r\n                        errors.formFName = 'Required';\r\n                    }\r\n\r\n                    if (!values.formMessage) {\r\n                        errors.formMessage = 'Required';\r\n                    }\r\n                    \r\n                    return errors;\r\n                    }\r\n                }\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className='formikForm'>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formSubject'>\r\n                                Subject:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formSubject' type='text' name='formSubject' placeholder='Subject' className='contactInputField'/>\r\n                            <ErrorMessage name='formSubject' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formEmail'>\r\n                                Email:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                            <Field id='formEmail' type='email' name='formEmail' placeholder='Email' className='contactInputField'/>\r\n                            <ErrorMessage name='formEmail' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formFName'>\r\n                                First Name:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formFName' type='text' name='formFName' placeholder='First Name' className='contactInputField'/>\r\n                                <ErrorMessage name='formFName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formLName'>\r\n                                Last Name:\r\n                            </StyledContactLabel>\r\n                                <Field id='formLName' type='text' name='formLName' placeholder='Last Name' className='contactInputField'/>\r\n                                <ErrorMessage name='formLName' component='div' />\r\n                        </StyledContactInputContainer>\r\n                        <StyledContactInputContainer>\r\n                            <StyledContactLabel for='formMessage'>\r\n                                Message:\r\n                                <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                            </StyledContactLabel>\r\n                                <Field id='formMessage' component='textarea' name='formMessage' placeholder='Message' className='contactInputField contactTextAreaField'/>\r\n                                <ErrorMessage name='formMessage' component='div' />\r\n                        </StyledContactInputContainer>\r\n\r\n                        <StyledContactSubmitButton type='submit' disabled={isSubmitting}>\r\n                            Submit\r\n                        </StyledContactSubmitButton>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </StyledFormikWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["125"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledCollapsibleNavContainer, StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledAnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faHome, faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    let scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar>\r\n                <StyledNavLogo>\r\n                    <ReactScrollLink title=\"AK\" id=\"homeSection\" underline={false} marginBottom={'0'}></ReactScrollLink>\r\n                </StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <StyledCollapsibleNavContainer>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNavLinks isOpen={isOpen}/>\r\n        </StyledCollapsibleNavContainer>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    const navBurgerAnimation = useSpring({\r\n        transform: isOpen \r\n        ? 'rotate(90deg)' \r\n        : 'rotate(0deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)} style={navBurgerAnimation}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNavLinks = ({isOpen}) => {\r\n    const navWindowAnimation = useSpring({\r\n        right: isOpen \r\n        ? '0%' \r\n        : '-50%'\r\n    })\r\n\r\n    return (\r\n        <StyledAnimatedContainer style={navWindowAnimation}>\r\n            <StyledNavigationListWrapper>\r\n                <SideBarNavigationLinks />\r\n            </StyledNavigationListWrapper>\r\n        </StyledAnimatedContainer>\r\n    )\r\n}\r\n\r\nconst SideBarNavigationLinks = () => {\r\n    return (\r\n        <StyledNavigationList>\r\n            <ReactScrollLink title=\"Home\" id=\"homeSection\" faIcon={faHome}/>\r\n            <ReactScrollLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}/>\r\n            <ReactScrollLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n            <ReactScrollLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n            <ReactScrollLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n        </StyledNavigationList>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["126"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper, StyledHomeLinkContainer, StyledHomeLinkIconTextContainer } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0, underline = true, marginBottom = '4vh'}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer marginBottom={marginBottom}>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                                <StyledAnimatedUnderline underline={underline}/>\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};\r\n\r\nexport const ReactScrollHomeLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledHomeLinkContainer>\r\n            <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                <StyledHomeLinkIconTextContainer>\r\n                    <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                    <div>\r\n                        {title}\r\n                    </div>\r\n                </StyledHomeLinkIconTextContainer>\r\n            </Link>\r\n        </StyledHomeLinkContainer>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["127"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent, StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage, StyledNavigatorContentContainer, StyledNavigatorWrapper, StyledDropdownTextLine } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { aboutComponentTextConfig } from './AboutComponentText';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} minHeight={'90vh'}>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledAppContainer>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <AnimatedNavigator />\r\n        </StyledAppContainer>\r\n    )\r\n}\r\n\r\nconst NavigatorHeaderCards = ({children}) => {\r\n    return (\r\n        <StyledNavigatorListContainer>\r\n            <StyledNavigatorList>{children}</StyledNavigatorList>\r\n        </StyledNavigatorListContainer>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n    const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    const returnDropdownText = (textObject) => {\r\n        return (\r\n            <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                    <StyledDropdownHeader>\r\n                        {textObject.title}\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            {\r\n                                textObject.text.map((line) => {\r\n                                    return (\r\n                                        <StyledDropdownTextLine>\r\n                                                {line}\r\n                                        </StyledDropdownTextLine>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </StyledDropdownSection>\r\n            </StyledDropdownContainer>\r\n        )\r\n    }\r\n\r\n    // Sets and returns dropdown Text from aboutComponentTextConfig\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[0])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[1])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        {returnDropdownText(aboutComponentTextConfig[2])}\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledNavigatorWrapper>\r\n            <NavigatorHeaderCards>\r\n                {aboutComponentTextConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                        title={n.navTitle}\r\n                        key={index}\r\n                        index={index}\r\n                        onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                    <StyledNavigatorCaret />\r\n                                    )\r\n                                }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </NavigatorHeaderCards>\r\n            <StyledNavigatorContentContainer>\r\n                {mainContent}\r\n            </StyledNavigatorContentContainer>\r\n        </StyledNavigatorWrapper>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n        \r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["128","129"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHeroTitle, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalTabNavButton, StyledModalTabContent, StyledModalTabContentTextListItem, StyledModalSubheader,StyledModalTabContentList, StyledModalHeroText, StyledModalTabContentTextSummary } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring';\r\n\r\n// Component Cards Text config\r\nimport { projectComponentCardTextConfig } from './ProjectComponentText';\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                {\r\n                   projectComponentCardTextConfig.slice(0, 2).map((project) => {\r\n                        return (\r\n                            <StyledProjectCard>\r\n                                <StyledImageCropContainer height={'40vh'}>\r\n                                    <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledCardHoverContainer>\r\n                                    <StyledProjectCardTitle>\r\n                                        {project.title}\r\n                                    </StyledProjectCardTitle>\r\n                                    <StyledProjectInformation>\r\n                                        {project.description}\r\n                                    </StyledProjectInformation>\r\n                                    <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                        Read More\r\n                                    </StyledReadMore>\r\n                                    <StyledGithubLink \r\n                                        href={project.gitLink}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Github\r\n                                    </StyledGithubLink>\r\n                                </StyledCardHoverContainer>\r\n                            </StyledProjectCard>\r\n                        )\r\n                    })\r\n                }\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    {\r\n                        projectComponentCardTextConfig.slice(2, 4).map((project) => {\r\n                            return (\r\n                                <StyledProjectCard>\r\n                                    <StyledImageCropContainer height={'40vh'}>\r\n                                        <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                    </StyledImageCropContainer>\r\n                                    <StyledCardHoverContainer>\r\n                                        <StyledProjectCardTitle>\r\n                                            {project.title}\r\n                                        </StyledProjectCardTitle>\r\n                                        <StyledProjectInformation>\r\n                                            {project.description}\r\n                                        </StyledProjectInformation>\r\n                                        <StyledReadMore onClick={() => projectModalSwitcher(project.onClick)}>\r\n                                            Read More\r\n                                        </StyledReadMore>\r\n                                        <StyledGithubLink \r\n                                            href={project.gitLink}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Github\r\n                                        </StyledGithubLink>\r\n                                    </StyledCardHoverContainer>\r\n                                </StyledProjectCard>\r\n                            )\r\n                        })\r\n                    }\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHeroTitle>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalTitle}\r\n                        </StyledModalHeroTitle>\r\n                        <StyledModalSubheader>\r\n                            Objective\r\n                        </StyledModalSubheader>\r\n                        <StyledModalHeroText>\r\n                            {projectComponentCardTextConfig[showModal-1].modal.modalObjective}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} />\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const returnTabContentList = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {   \r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextListItem key={title+item}>{item}</StyledModalTabContentTextListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContentSummary = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalSubheader>\r\n                        {title}\r\n                    </StyledModalSubheader>\r\n                    <StyledModalTabContentList>\r\n                        {mapArray.map((item) => {\r\n                            return (\r\n                                <StyledModalTabContentTextSummary>\r\n                                    {item}\r\n                                </StyledModalTabContentTextSummary>\r\n                            )\r\n                        })}\r\n                    </StyledModalTabContentList>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                // if 0 return case 1\r\n            }\r\n            case 1: {\r\n                return (\r\n                    returnTabContentList(\"Tech\", projectComponentCardTextConfig[showModal-1].modal.modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    returnTabContentList(\"Learnings\", projectComponentCardTextConfig[showModal-1].modal.modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    returnTabContentSummary(\"Summary\", projectComponentCardTextConfig[showModal-1].modal.modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledModalTabNavButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["130","131"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentText.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponent.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Skills\\SkillsComponentStyles.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":16,"nodeType":"138","messageId":"139","endLine":1,"endColumn":24},{"ruleId":"136","severity":1,"message":"140","line":1,"column":26,"nodeType":"138","messageId":"139","endLine":1,"endColumn":35},{"ruleId":"136","severity":1,"message":"141","line":3,"column":37,"nodeType":"138","messageId":"139","endLine":3,"endColumn":55},{"ruleId":"136","severity":1,"message":"142","line":3,"column":106,"nodeType":"138","messageId":"139","endLine":3,"endColumn":127},{"ruleId":"136","severity":1,"message":"143","line":3,"column":129,"nodeType":"138","messageId":"139","endLine":3,"endColumn":156},{"ruleId":"136","severity":1,"message":"144","line":3,"column":158,"nodeType":"138","messageId":"139","endLine":3,"endColumn":185},{"ruleId":"136","severity":1,"message":"145","line":3,"column":211,"nodeType":"138","messageId":"139","endLine":3,"endColumn":236},{"ruleId":"146","severity":1,"message":"147","line":26,"column":8,"nodeType":"148","endLine":26,"endColumn":10,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":9,"column":17,"nodeType":"152","endLine":9,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":40,"column":5,"nodeType":"155","messageId":"156","endLine":58,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":203,"column":9,"nodeType":"155","messageId":"156","endLine":223,"endColumn":10},{"ruleId":"157","severity":1,"message":"158","line":207,"column":13,"nodeType":"159","messageId":"160","endLine":211,"endColumn":14},{"ruleId":"136","severity":1,"message":"161","line":3,"column":120,"nodeType":"138","messageId":"139","endLine":3,"endColumn":139},{"ruleId":"146","severity":1,"message":"162","line":59,"column":8,"nodeType":"148","endLine":59,"endColumn":10,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactInput' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["166"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'StyledCommitGitLink' is defined but never used.","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [scrollTop]",{"range":"172","text":"173"},"Update the dependencies array to be: [octokit]",{"range":"174","text":"175"},[1189,1191],"[scrollTop]",[2453,2455],"[octokit]"]