[{"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js":"1","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js":"2","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js":"3","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js":"4","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js":"5","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js":"6","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js":"7","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js":"8","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js":"9","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js":"10","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js":"11","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js":"12","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js":"13","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js":"14","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js":"15","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js":"16","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js":"17","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js":"18","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js":"19","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js":"20","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js":"21","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js":"22","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":435,"mtime":1621027753457,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1560,"mtime":1623981088113,"results":"28","hashOfConfig":"25"},{"size":220,"mtime":1622783555082,"results":"29","hashOfConfig":"25"},{"size":925,"mtime":1623482476642,"results":"30","hashOfConfig":"25"},{"size":5381,"mtime":1621650185129,"results":"31","hashOfConfig":"25"},{"size":2981,"mtime":1623959153524,"results":"32","hashOfConfig":"25"},{"size":1953,"mtime":1623959356078,"results":"33","hashOfConfig":"25"},{"size":1050,"mtime":1622769916913,"results":"34","hashOfConfig":"25"},{"size":2244,"mtime":1622789146458,"results":"35","hashOfConfig":"25"},{"size":8413,"mtime":1622882283475,"results":"36","hashOfConfig":"25"},{"size":3119,"mtime":1623461172462,"results":"37","hashOfConfig":"25"},{"size":14072,"mtime":1623959951193,"results":"38","hashOfConfig":"25"},{"size":8039,"mtime":1623963161911,"results":"39","hashOfConfig":"25"},{"size":4925,"mtime":1622883014036,"results":"40","hashOfConfig":"25"},{"size":1761,"mtime":1622949032076,"results":"41","hashOfConfig":"25"},{"size":367,"mtime":1621555003442,"results":"42","hashOfConfig":"25"},{"size":1940,"mtime":1621242928092,"results":"43","hashOfConfig":"25"},{"size":156,"mtime":1621000393565,"results":"44","hashOfConfig":"25"},{"size":515,"mtime":1621207032031,"results":"45","hashOfConfig":"25"},{"size":5360,"mtime":1624060186351,"results":"46","hashOfConfig":"25"},{"size":3853,"mtime":1624060038486,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"18bafpx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\index.js",[],["102","103"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\App.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponent.js",["104","105"],"import React, {useState, useEffect} from 'react';\r\nimport { StyledMainContainer } from './MainComponentStyles';\r\nimport { AboutComponent } from '../About/AboutComponent'\r\nimport { ContactComponent } from '../../presentational/Contact/ContactComponent';\r\nimport { HomeComponent } from '../../presentational/Home/HomeComponent'\r\nimport { ProjectsComponent } from '..//Projects/ProjectsComponent';\r\nimport { ActivityComponent } from '../../container/Activity/ActivityComponent';\r\nimport { NavBar } from '../NavBar/NavComponent';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst MainComponent = () => {\r\n    // React-scroll only seems to work on id props set on plain html divs.\r\n    return (\r\n        <StyledMainContainer>\r\n\r\n            <NavBar />\r\n\r\n            <div id=\"homeSection\">\r\n                    <HomeComponent />\r\n            </div>\r\n\r\n            <div id=\"projectsSection\">\r\n                <Fade right>\r\n                    <ProjectsComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"aboutSection\">\r\n                <Fade left>\r\n                    <AboutComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"activitySection\">\r\n                <Fade right>\r\n                    <ActivityComponent />\r\n                </Fade>\r\n            </div>\r\n            \r\n            <div id=\"contactSection\">\r\n                <Fade left>\r\n                    <ContactComponent />\r\n                </Fade>\r\n            </div>\r\n\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Main\\MainComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\SectionComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponent.js",["106","107","108","109","110"],"import React from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader, StyledSectionSubheader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledContactSubmitButton, StyledContactInput, StyledContactInputContainer, StyledContactLabel, StyledContactTextarea, StyledContactFNameContainer, StyledContactLNameContainer, StyledRequiredAsterick, StyledNameInputContainers, StyledFormikWrapper } from './ContactComponentStyles';\r\nimport emailjs from 'emailjs-com';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const ContactComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight}>\r\n\r\n            <StyledSectionHeader>\r\n                Contact Me\r\n            </StyledSectionHeader>\r\n            <StyledSectionSubheader>\r\n                I hope to hear from you soon!\r\n            </StyledSectionSubheader>\r\n            <ContactForm />\r\n\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst ContactForm = () => {\r\n\r\n    //EmailJs\r\n    const sendEmail = (object) => {\r\n        emailjs.send(\"service_e968q22\", \"template_4k3a6so\", object, \"user_751xNiHC7Q8RBo3dQib5W\")\r\n        .then((result) => {\r\n            console.log(result.text)\r\n        }, (error) => {\r\n            console.log(error.text)\r\n        })\r\n    }\r\n\r\n    const onSubmit = (values, actions) => {\r\n        setTimeout(() => {\r\n            sendEmail(values)\r\n            actions.setSubmitting(false)\r\n          }, 1000)\r\n        \r\n        actions.resetForm();\r\n    };\r\n\r\n    return (\r\n        <StyledFormikWrapper>\r\n            <Formik\r\n            initialValues={{ formSubject: '', formEmail: '', formFName: '', formLName: '', formMessage: '' }}\r\n            onSubmit={onSubmit}\r\n\r\n            validate={values => {\r\n            const errors = {};\r\n            if (!values.formSubject) {\r\n                errors.formSubject = 'Required';\r\n            }\r\n\r\n            if (!values.formEmail) {\r\n                errors.formEmail = 'Required';\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.formEmail)\r\n            ) {\r\n                errors.formEmail = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.formFName) {\r\n                errors.formFName = 'Required';\r\n            }\r\n\r\n            if (!values.formMessage) {\r\n                errors.formMessage = 'Required';\r\n            }\r\n            \r\n            return errors;\r\n            }}\r\n        >\r\n            {({ isSubmitting }) => (\r\n            <Form className='formikForm'>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formSubject'>\r\n                        Subject:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <Field id='formSubject' type='text' name='formSubject' placeholder='Subject' className='contactInputField'/>\r\n                    <ErrorMessage name='formSubject' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formEmail'>\r\n                        Email:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                    <Field id='formEmail' type='email' name='formEmail' placeholder='Email' className='contactInputField'/>\r\n                    <ErrorMessage name='formEmail' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formFName'>\r\n                        First Name:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                        <Field id='formFName' type='text' name='formFName' placeholder='First Name' className='contactInputField'/>\r\n                        <ErrorMessage name='formFName' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formLName'>\r\n                        Last Name:\r\n                    </StyledContactLabel>\r\n                        <Field id='formLName' type='text' name='formLName' placeholder='Last Name' className='contactInputField'/>\r\n                        <ErrorMessage name='formLName' component='div' />\r\n                </StyledContactInputContainer>\r\n                <StyledContactInputContainer>\r\n                    <StyledContactLabel for='formMessage'>\r\n                        Message:\r\n                        <StyledRequiredAsterick>&nbsp;*</StyledRequiredAsterick>\r\n                    </StyledContactLabel>\r\n                        <Field id='formMessage' component='textarea' name='formMessage' placeholder='Message' className='contactInputField contactTextAreaField'/>\r\n                        <ErrorMessage name='formMessage' component='div' />\r\n                </StyledContactInputContainer>\r\n\r\n                <StyledContactSubmitButton type='submit' disabled={isSubmitting}>\r\n                    Submit\r\n                </StyledContactSubmitButton>\r\n            </Form>\r\n            )}\r\n        </Formik>\r\n      </StyledFormikWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponent.js",["111"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledCollapsibleNavContainer, StyledNavContainer, StyledNavBar, StyledNavigationList, StyledNavLogo, StyledToggler, StyledAnimatedContainer, StyledNavigationListWrapper } from './NavComponentStyles';\r\nimport { ReactScrollLink } from '../../../shared/sharedComponents/ReactScrollComponent'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faHome, faLaptopCode, faUserAstronaut, faCodeBranch, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const [scrolling, setScrolling] = useState(true);\r\n\r\n    let scrollTop = 0;\r\n    // Navbar background sets to transparent when not at top of page.\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            let currentPosition = window.pageYOffset;\r\n\r\n            if (currentPosition > scrollTop) {\r\n                setScrolling(false);\r\n            } else {\r\n                setScrolling(true);\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledNavContainer scroll={scrolling}>\r\n            <StyledNavBar scoll={scrolling}>\r\n                <StyledNavLogo>Logo Here</StyledNavLogo>\r\n                <CollapsibleNavComponent />\r\n            </StyledNavBar>\r\n        </StyledNavContainer>\r\n    );\r\n}\r\n\r\nconst CollapsibleNavComponent = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n        <StyledCollapsibleNavContainer>\r\n            <NavBarToggler isOpen={isOpen} setOpen={setOpen} />\r\n            <CollapsibleNavLinks isOpen={isOpen}/>\r\n        </StyledCollapsibleNavContainer>\r\n    )\r\n}\r\n\r\nconst NavBarToggler = ({setOpen, isOpen}) => {\r\n    return (\r\n        <StyledToggler onClick={() => setOpen(!isOpen)}>\r\n            <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n        </StyledToggler>\r\n    )\r\n}\r\n\r\nconst CollapsibleNavLinks = ({isOpen}) => {\r\n    const navAnimation = useSpring({\r\n        right: isOpen \r\n        ? '0%' \r\n        : '-50%'\r\n    })\r\n\r\n    return (\r\n        <StyledAnimatedContainer style={navAnimation}>\r\n            <StyledNavigationListWrapper>\r\n                <SideBarNavigationLinks />\r\n            </StyledNavigationListWrapper>\r\n        </StyledAnimatedContainer>\r\n    )\r\n}\r\n\r\nconst SideBarNavigationLinks = () => {\r\n    return (\r\n        <StyledNavigationList>\r\n            <ReactScrollLink title=\"Home\" id=\"homeSection\" faIcon={faHome}/>\r\n            <ReactScrollLink title=\"Projects\" id=\"projectsSection\" faIcon={faLaptopCode}/>\r\n            <ReactScrollLink title=\"About\" id=\"aboutSection\" faIcon={faUserAstronaut}/>\r\n            <ReactScrollLink title=\"Activity\" id=\"activitySection\" faIcon={faCodeBranch}/>\r\n            <ReactScrollLink title=\"Contact\" id=\"contactSection\" faIcon={faEnvelope}/>\r\n        </StyledNavigationList>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\NavBar\\NavComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponent.js",["112"],"import { Link } from 'react-scroll';\r\nimport { StyledAnimatedUnderline, StyledReactScrollLinkContainer, StyledReactScrollLinkWrapper, StyledIconTextWrapper } from './ReactScrollComponentStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReactScrollLink = ({id, title, faIcon, delay = 0}) => {\r\n    return (\r\n        <StyledReactScrollLinkWrapper>\r\n            <StyledReactScrollLinkContainer>\r\n                <a>\r\n                    <Link activeClass=\"active\" to={id} spy={true} smooth={true} duration={400} delay={delay}>\r\n                        <StyledAnimatedUnderline/>\r\n                        <StyledIconTextWrapper>\r\n                            <FontAwesomeIcon icon={faIcon} size=\"2x\" />\r\n                            <div>\r\n                                {title}\r\n                            </div>\r\n                        </StyledIconTextWrapper>\r\n                    </Link>\r\n                </a>\r\n            </StyledReactScrollLinkContainer>\r\n        </StyledReactScrollLinkWrapper>\r\n    )\r\n};","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Contact\\ContactComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponent.js",["113"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledMainHeaderContainer, \r\n    StyledNavigatorCaret, StyledDropdownHeader, StyledDropdownContent,\r\n    StyledDropdownSection, StyledDropdownContainer, StyledNavigatorItemTitle, StyledNavigatorItemContainer, StyledDropdownSlot, StyledNavigatorListContainer,\r\nStyledNavigatorList, StyledAppContainer, StyledMainContentContainer, StyledNavigatorContainer, StyledDropdownImage } from './AboutComponentStyles';\r\nimport businessImage from '../../../shared/images/business.jpg';\r\nimport creativeImage from '../../../shared/images/creativity.jfif';\r\nimport peopleImage from '../../../shared/images/people.jfif';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\n\r\nexport const AboutComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryLight} height='100vh'>\r\n            <AboutMainComponent />\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\nconst AboutMainComponent = () => {\r\n    return (\r\n        <StyledMainHeaderContainer>\r\n          <StyledAppContainer>\r\n              <AnimatedNavigator />\r\n          </StyledAppContainer>\r\n        </StyledMainHeaderContainer>\r\n    )\r\n}\r\n\r\nconst Navigator = ({children}) => {\r\n    return (\r\n        <StyledNavigatorListContainer>\r\n            <StyledNavigatorList>{children}</StyledNavigatorList>\r\n        </StyledNavigatorListContainer>\r\n    )\r\n}\r\n\r\nconst HoverImage = (props) => {\r\n    switch (props.image) {\r\n        case 0: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={businessImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 1: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={creativeImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n\r\n        case 2: return (\r\n            <StyledImageCropContainer desktopHeight={'23vh'} height={'17vh'} position={'absolute'}>\r\n                <StyledDropdownImage src={peopleImage} />\r\n            </StyledImageCropContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst AnimatedNavigator = () => {\r\n    const [mainContent, setMainContent] = useState(<div></div>);\r\n\r\n    const [activeIndices, setActiveIndices] = useState([]);\r\n\r\n    const currentIndex = activeIndices[activeIndices.length -1];\r\n    \r\n    const navigatorConfig = [\r\n        { title: \"Entrepreneur at Heart\", dropdown: AchieveDropdown },\r\n        { title: \"Why I love Coding\", dropdown: CodingDropdown },\r\n        { title: \"What I hope to Achieve\", dropdown: EntrepreneurDropdown }\r\n    ];\r\n\r\n    const navigatorSelectFunction = (i) => {\r\n        setActiveIndices([...activeIndices, i]);\r\n        setMainContent(contentSetter(i));\r\n    }\r\n\r\n    const onMouseEnter = i => {\r\n        navigatorSelectFunction(i);\r\n    };\r\n\r\n    const contentSetter = (index) => {\r\n        switch(index) {\r\n            case 0: return (\r\n                <StyledMainContentContainer key={0}>\r\n                    <Fade down>\r\n                        <AchieveDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 1: return (\r\n                <StyledMainContentContainer key={1}>\r\n                    <Fade down>\r\n                        <CodingDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            case 2: return (\r\n                <StyledMainContentContainer key={2}>\r\n                    <Fade down>\r\n                        <EntrepreneurDropdown />\r\n                    </Fade>\r\n                </StyledMainContentContainer>\r\n            )\r\n            default: return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledSectionHeader>\r\n                About Me\r\n            </StyledSectionHeader>\r\n            <Navigator>\r\n                {navigatorConfig.map((n, index) => {\r\n                    return (\r\n                        <NavigatorItem\r\n                            title={n.title}\r\n                            key={index}\r\n                            index={index}\r\n                            onMouseEnter={onMouseEnter}\r\n                        >\r\n                            {   //Logical Operator Short Circuiting, returns Component after 1st pass\r\n                                currentIndex === index && (\r\n                                <StyledNavigatorCaret />\r\n                                )\r\n                            }\r\n                        </NavigatorItem>\r\n                    );\r\n                })}\r\n            </Navigator>\r\n            {mainContent}\r\n        </>\r\n    );\r\n}\r\n\r\nconst NavigatorItem = (props) => {\r\n        \r\n    const onMouseEnter = () => {\r\n        props.onMouseEnter(props.index);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigatorContainer>\r\n            <StyledNavigatorItemContainer onMouseEnter={onMouseEnter} onFocus={onMouseEnter}>\r\n                <HoverImage image={props.index}/>\r\n                <StyledNavigatorItemTitle>\r\n                    {props.title}\r\n                </StyledNavigatorItemTitle>\r\n                <StyledDropdownSlot>{props.children}</StyledDropdownSlot>\r\n            </StyledNavigatorItemContainer>\r\n        </StyledNavigatorContainer>\r\n    );\r\n}\r\n\r\n//On-Hover Content\r\nconst EntrepreneurDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n            <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Achieve\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    )\r\n}\r\n\r\nconst CodingDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Love Coding\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                            <div>\r\n                                Sentence 1\r\n                            </div>\r\n                            <div>\r\n                                Sentence 2\r\n                            </div>\r\n                            <div>\r\n                                Sentence 3\r\n                            </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n\r\nconst AchieveDropdown = () => {\r\n    return (\r\n        <StyledDropdownContainer>\r\n                <StyledDropdownSection>\r\n                <div>\r\n                    <StyledDropdownHeader>\r\n                        Entrepreneur\r\n                    </StyledDropdownHeader>\r\n                    <StyledDropdownContent>\r\n                        <Fade up cascade big>\r\n                                <div>\r\n                                    Sentence 1\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 2\r\n                                </div>\r\n                                <div>\r\n                                    Sentence 3\r\n                                </div>\r\n                        </Fade>\r\n                    </StyledDropdownContent>\r\n                </div>\r\n            </StyledDropdownSection>\r\n        </StyledDropdownContainer>\r\n    );\r\n};\r\n//On-Hover Content End","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\About\\AboutComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponent.js",["114","115"],"import React, { useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCardHoverContainer, StyledModalTabContentContainer, StyledGithubLink, StyledModalContentContainer, StyledProjectCard, StyledProjectCardImage, StyledProjectCardsContainer, StyledProjectCardTitle, StyledProjectInformation, StyledReadMore, StyledSectionContainerContent, StyledSectionIconContainer, StyledSectionSwitcher, StyledAltProjectCardsContainer, StyledModalHero, StyledModalContent, StyledModalWrapper, StyledProjectAnimatedContainer, StyledSectionContainerWrapper, StyledModalNavWrapper, StyledModalNavContainer, StyledModalTabNavButton, StyledModalTabContent, StyledModalTabContentTextItem, StyledModalTabContentTitle,StyledModalTabContentText, StyledModalHeroText } from './ProjectsComponentStyles';\r\nimport { StyledImageCropContainer } from '../../../shared/sharedComponents/ImageStyledComponents';\r\nimport apparelStoreMockup from '../../../shared/images/apparel-store-mockup.jpg'\r\nimport tokenizeAmazonMockup from '../../../shared/images/tokenize-amazon-mockup.jpg'\r\nimport bobaMockup from '../../../shared/images/boba-app-mockup.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSpring } from 'react-spring'\r\n\r\nexport const ProjectsComponent = () => {\r\n\r\n    //Used to change visual of Section Switcher depending on state\r\n    const [section, setSection]  = useState(true);\r\n\r\n    //State to represent which project modal to show.\r\n    const [showModal, setShowModal] = useState(0);\r\n\r\n    const sectionSwitchHandler = (e) => {\r\n        setSection(!section);\r\n    }\r\n\r\n    const projectModalSwitcher = (state) => {\r\n        setShowModal(state);\r\n    }\r\n\r\n    // Main\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <SectionContainer section={section} projectModalSwitcher={projectModalSwitcher} sectionSwitchHandler={sectionSwitchHandler} showModal={showModal}/>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n\r\n\r\n// Which projects page to display\r\nconst ProjectSection = ({section, projectModalSwitcher}) => {\r\n    const projectConfig = [\r\n        {\r\n            title: \"Tokenize Amazon\",\r\n            description: \"Responsive Landing Page and Full website of Tokenize Amazon website.\",\r\n            image: tokenizeAmazonMockup,\r\n            imageAlt: \"\",\r\n            gitLink: \"https://github.com/312akim/apparel-store-mern\",\r\n            onClick: () => projectModalSwitcher(1),\r\n        },\r\n        {\r\n            title: \"Apparel Store\",\r\n            description: \"Responsive SPA e-commerce store with front & back-end functionality. Cart and checkout functionality achieved through integration with Snipcart.\",\r\n            image: apparelStoreMockup,\r\n            imageAlt: \"\",\r\n            gitLink: \"https://github.com/312akim/apparel-store-mern\",\r\n            onClick: () => projectModalSwitcher(2),\r\n        },\r\n        {\r\n            title: \"Portfolio Website\",\r\n            description: \"The code behind this portfolio site, featuring the Github Octokit api to load my latest updates.\",\r\n            image: tokenizeAmazonMockup,\r\n            imageAlt: \"\",\r\n            gitLink: \"https://github.com/312akim/apparel-store-mern\",\r\n            onClick: () => projectModalSwitcher(3),\r\n        },\r\n        {\r\n            title: \"Bubble Tea App\",\r\n            description: \"In-Progress. My first React-Native project.\",\r\n            image: bobaMockup,\r\n            imageAlt: \"\",\r\n            gitLink: \"https://github.com/312akim/apparel-store-mern\",\r\n            onClick: () => projectModalSwitcher(4),\r\n        }\r\n    ];\r\n\r\n    if (section) {\r\n        return (\r\n            <StyledProjectCardsContainer>\r\n                {\r\n                   projectConfig.slice(0, 2).map((project) => {\r\n                        return (\r\n                            <StyledProjectCard>\r\n                                <StyledImageCropContainer height={'40vh'}>\r\n                                    <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                </StyledImageCropContainer>\r\n                                <StyledCardHoverContainer>\r\n                                    <StyledProjectCardTitle>\r\n                                        {project.title}\r\n                                    </StyledProjectCardTitle>\r\n                                    <StyledProjectInformation>\r\n                                        {project.description}\r\n                                    </StyledProjectInformation>\r\n                                    <StyledReadMore onClick={project.onClick}>\r\n                                        Read More\r\n                                    </StyledReadMore>\r\n                                    <StyledGithubLink \r\n                                        href={project.gitLink}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Github\r\n                                    </StyledGithubLink>\r\n                                </StyledCardHoverContainer>\r\n                            </StyledProjectCard>\r\n                        )\r\n                    })\r\n                }\r\n            </StyledProjectCardsContainer>\r\n        )\r\n    } else {\r\n        if (!section) {\r\n            return (\r\n                <StyledAltProjectCardsContainer>\r\n                    {\r\n                        projectConfig.slice(2, 4).map((project) => {\r\n                            return (\r\n                                <StyledProjectCard>\r\n                                    <StyledImageCropContainer height={'40vh'}>\r\n                                        <StyledProjectCardImage src={project.image} alt={project.image.alt}/>\r\n                                    </StyledImageCropContainer>\r\n                                    <StyledCardHoverContainer>\r\n                                        <StyledProjectCardTitle>\r\n                                            {project.title}\r\n                                        </StyledProjectCardTitle>\r\n                                        <StyledProjectInformation>\r\n                                            {project.description}\r\n                                        </StyledProjectInformation>\r\n                                        <StyledReadMore onClick={project.onClick}>\r\n                                            Read More\r\n                                        </StyledReadMore>\r\n                                        <StyledGithubLink \r\n                                            href={project.gitLink}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Github\r\n                                        </StyledGithubLink>\r\n                                    </StyledCardHoverContainer>\r\n                                </StyledProjectCard>\r\n                            )\r\n                        })\r\n                    }\r\n                </StyledAltProjectCardsContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Project Section Display Switcher & arrow icon\r\nconst SectionSwitcher = ({section, sectionSwitchHandler}) => {\r\n    if (section) {\r\n        return (\r\n            <StyledSectionSwitcher position={'0%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleRight} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSectionSwitcher position={'85%'} onClick={() => sectionSwitchHandler()}>\r\n                <StyledSectionIconContainer>\r\n                    <FontAwesomeIcon icon={faAngleLeft} size=\"4x\" />\r\n                </StyledSectionIconContainer>\r\n            </StyledSectionSwitcher>\r\n        )\r\n    }\r\n}\r\n\r\n// Modal Display\r\nconst ModalDisplay = ({showModal, projectModalSwitcher}) => {\r\n    const modal1 = {\r\n        modalTitle: \"Tokenize Amazon\",\r\n        modalText: \"Freelance Project consisting of a Landing Page with the goal of introducing a startup's ideas and email newsletter signups.\",\r\n        modalTechText: [\"lT1awdawdawd\", \"lT2\", \"lT3\", \"lT1\", \"lT2\", \"lT3\",\"lT1\", \"lT2\", \"lT3\",\"lT1\", \"lT2\", \"lT3\",\"lT1\", \"lT2\", \"lT3\"],\r\n        modalLearningsText: [\"lL1\", \"lL2\", \"lL3\"],\r\n        modalSummaryText: [\"lS1\", \"lS2\", \"lS3\"],\r\n    }\r\n\r\n    const modal2 = {\r\n        modalTitle: \"222\",\r\n        modalText: \"Freelance Project consisting of a Landing Page with the goal of introducing a startup's ideas and email newsletter signups.\",\r\n        modalTechText: [\"lT1\", \"lT2\", \"lT3\"],\r\n        modalLearningsText: [\"lL1\", \"lL2\", \"lL3\"],\r\n        modalSummaryText: [\"lS1\", \"lS2\", \"lS3\"],\r\n    }\r\n    \r\n    const modal3 = {\r\n        modalTitle: \"333\",\r\n        modalText: \"Freelance Project consisting of a Landing Page with the goal of introducing a startup's ideas and email newsletter signups.\",\r\n        modalTechText: [\"lT1\", \"lT2\", \"lT3\"],\r\n        modalLearningsText: [\"lL1\", \"lL2\", \"lL3\"],\r\n        modalSummaryText: [\"lS1\", \"lS2\", \"lS3\"],\r\n    }\r\n\r\n    const modal4 = {\r\n        modalTitle: \"444\",\r\n        modalText: \"Freelance Project consisting of a Landing Page with the goal of introducing a startup's ideas and email newsletter signups.\",\r\n        modalTechText: [\"lT1\", \"lT2\", \"lT3\"],\r\n        modalLearningsText: [\"lL1\", \"lL2\", \"lL3\"],\r\n        modalSummaryText: [\"lS1\", \"lS2\", \"lS3\"],\r\n    }\r\n\r\n    const modalArray = [\r\n        \"\", modal1, modal2, modal3, modal4\r\n    ]\r\n\r\n    if (showModal === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledModalWrapper onClick={() => projectModalSwitcher(0)}>\r\n                <StyledModalContentContainer onClick={(e) => e.stopPropagation()}>\r\n                    <StyledModalContent>\r\n                        <StyledModalHero>\r\n                            {modalArray[showModal].modalTitle}\r\n                        </StyledModalHero>\r\n                        <StyledModalHeroText>\r\n                            {modalArray[showModal].modalText}\r\n                        </StyledModalHeroText>\r\n                        <ModalTabsComponent showModal={showModal} modalArray={modalArray}/>\r\n                    </StyledModalContent>\r\n                </StyledModalContentContainer>\r\n            </StyledModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ModalTabsComponent = ({showModal, modalArray}) => {\r\n    const [tabSelector, setTabSelector] = useState(0);\r\n\r\n    //Returns tab title & maps text as list\r\n    const generateTabContent = (title, mapArray) => {\r\n        return (\r\n                <StyledModalTabContentContainer>\r\n                    <StyledModalTabContentTitle>\r\n                        {title}\r\n                    </StyledModalTabContentTitle>\r\n                    <StyledModalTabContentText>\r\n                        {\r\n                            mapArray.map(item => {\r\n                                return (\r\n                                    <StyledModalTabContentTextItem>{item}</StyledModalTabContentTextItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                    </StyledModalTabContentText>\r\n                </StyledModalTabContentContainer>\r\n        )\r\n    }\r\n\r\n    const returnTabContent = () => {\r\n        switch(tabSelector) {\r\n            case 0: {\r\n                \r\n            }\r\n            case 1: {\r\n                return (\r\n                    generateTabContent(\"Tech\", modalArray[showModal].modalTechText)\r\n                )\r\n            }\r\n            case 2: {\r\n                return (\r\n                    generateTabContent(\"Learnings\", modalArray[showModal].modalLearningsText)\r\n                )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    generateTabContent(\"Summary\", modalArray[showModal].modalSummaryText)\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledModalNavWrapper>\r\n            <StyledModalNavContainer>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(1)}>\r\n                    Tech\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(2)}>\r\n                    Learnings\r\n                </StyledModalTabNavButton>\r\n                <StyledModalTabNavButton onClick={() => setTabSelector(3)}>\r\n                    Summary\r\n                </StyledModalTabNavButton>\r\n            </StyledModalNavContainer>\r\n            <StyledModalTabContent>\r\n                {\r\n                    returnTabContent()\r\n                }\r\n            </StyledModalTabContent>\r\n        </StyledModalNavWrapper>\r\n    )\r\n}\r\n\r\n\r\n// Body\r\nconst SectionContainer = ({section, projectModalSwitcher, showModal, sectionSwitchHandler}) => {\r\n    const projectDisplayAnimation = useSpring({\r\n        transform: section \r\n        ? 'rotateY(0deg)' \r\n        : 'rotateY(180deg)'\r\n    })\r\n\r\n    return (\r\n        <StyledSectionContainerWrapper>\r\n            <SectionSwitcher section={section} sectionSwitchHandler={sectionSwitchHandler}/>\r\n            <StyledSectionContainerContent>\r\n                <ModalDisplay showModal={showModal} projectModalSwitcher={projectModalSwitcher}/>\r\n                <StyledSectionHeader>\r\n                    Projects\r\n                </StyledSectionHeader>\r\n                <StyledProjectAnimatedContainer style={projectDisplayAnimation}>\r\n                    <ProjectSection section={section} projectModalSwitcher={projectModalSwitcher} />\r\n                </StyledProjectAnimatedContainer>\r\n            </StyledSectionContainerContent>\r\n        </StyledSectionContainerWrapper>\r\n    )\r\n}","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Projects\\ProjectsComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponent.js",["116","117"],"import React, { useEffect, useState } from 'react';\r\nimport { StyledSectionComponent, StyledSectionHeader } from '../../../shared/sharedComponents/SectionComponentStyles';\r\nimport { StyledCommitWrapper, StyledCommitTitle, StyledCommitDataWrapper, StyledCommitListContainer, StyledCommitDate, StyledCommitGitLink, StyledCommitDataContainer, StyledCommitComment, StyledCommitGitAnchor, StyledCommitListWrapper, StyledActivitySectionContainer } from './ActivityComponentStyles';\r\nimport { Octokit } from \"@octokit/core\";\r\n\r\nexport const ActivityComponent = () => {\r\n    return (\r\n        <StyledSectionComponent backgroundColor={({theme}) => theme.primaryDark} fontColor={({theme}) => theme.primaryLight}>\r\n            <StyledActivitySectionContainer>\r\n              <StyledSectionHeader>\r\n                  Recent Activity\r\n              </StyledSectionHeader>\r\n              <StyledCommitListContainer>\r\n                  <CommitListComponent />\r\n              </StyledCommitListContainer>\r\n            </StyledActivitySectionContainer>\r\n        </StyledSectionComponent>\r\n    )\r\n}\r\n\r\n//Github API Latest 5 commits to a repo\r\nconst CommitListComponent = () => {\r\n  const [apparelStoreCommits, setApparelStoreCommits] = useState(false);\r\n  const [portfolioCommits, setPortfolioCommits] = useState(false);\r\n\r\n  const octokit = new Octokit({ \r\n    auth: process.env.GIT_TOKEN \r\n  });\r\n\r\n  useEffect(() => {\r\n    const owner = '312akim',\r\n          repo1 = 'apparel-store-mern',\r\n          repo2 = 'react-portfolio-website',\r\n          // **********\r\n          // Show 3 commits if smaller vertical sized screen\r\n          // perPage = window.document.body.offsetHeight < 4300 ? 3 : 4;\r\n          // **********\r\n          perPage = 5;\r\n    \r\n    console.log(\"Height: \" + window.document.body.offsetHeight);\r\n    const fetchApparelStoreData = async () => {\r\n        const fourMostRecentApparelCommits = await octokit.request(\r\n            `GET /repos/{owner}/{repo1}/commits`, { owner, repo1, per_page: perPage }\r\n        );\r\n\r\n        setApparelStoreCommits(fourMostRecentApparelCommits);\r\n    }\r\n\r\n    const fetchPortfolioCommits = async () => {\r\n        const fourMostRecentPortfolioCommits = await octokit.request(\r\n            `GET /repos/{owner}/{repo2}/commits`, { owner, repo2, per_page: perPage }\r\n        );\r\n\r\n        setPortfolioCommits(fourMostRecentPortfolioCommits);\r\n    }\r\n\r\n    fetchApparelStoreData();\r\n    fetchPortfolioCommits();\r\n    }, [])\r\n\r\n    const commitConfig = [\r\n      { title: \"Apparel Store Commits\", api: apparelStoreCommits },\r\n      { title: \"Portfolio Site Commits\", api: portfolioCommits }\r\n    ];\r\n\r\n    return (\r\n      <StyledCommitListWrapper>\r\n        {commitConfig.map((n, index) => {\r\n          console.log(\"returned\");\r\n          return (\r\n            <div key={index}>\r\n              {CommitComponent(n)}\r\n            </div>\r\n            )\r\n        })}\r\n      </StyledCommitListWrapper>\r\n    );\r\n}\r\n\r\nconst CommitComponent = (props) => {\r\n  return (\r\n    <StyledCommitWrapper>\r\n        <StyledCommitTitle>{props.title}</StyledCommitTitle>\r\n        <StyledCommitDataWrapper>\r\n          {!props.api ? <div>Failed to load github commit data</div> :\r\n            props.api.data.map(commit => (\r\n              <StyledCommitDataContainer key={commit.id}>\r\n                <StyledCommitDate>\r\n                  Date: {new Date(commit.commit.author.date).toLocaleDateString()}&nbsp;\r\n                </StyledCommitDate>\r\n                <StyledCommitGitAnchor href={commit.html_url} target=\"_blank\">\r\n                  Github\r\n                  </StyledCommitGitAnchor>\r\n                <StyledCommitComment>\r\n                  Comment: {commit.commit.message}\r\n                </StyledCommitComment>\r\n              </StyledCommitDataContainer>\r\n          ))}\r\n        </StyledCommitDataWrapper>\r\n    </StyledCommitWrapper>\r\n  )\r\n}\r\n\r\n// const TimedCloud = () => {\r\n//   const [cloudState, setCloudState] = useState(<div></div>);\r\n\r\n//   const scrollTop = window.innerHeight * 3;\r\n//   useEffect(() => {\r\n//       const onScroll = () => {\r\n//           let currentPosition = window.pageYOffset;\r\n//           console.log(\"Current position: \" + currentPosition);\r\n\r\n//           if (currentPosition > scrollTop) {\r\n//               setCloudState(<CloudComponent />);\r\n//           } else {\r\n//               setCloudState(<div></div>);\r\n//           }\r\n//       }\r\n//       window.addEventListener(\"scroll\", onScroll);\r\n//       return () => window.removeEventListener(\"scroll\", onScroll);\r\n//   }, []);\r\n\r\n//   return (\r\n//       <div>\r\n//           {cloudState}\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// const CloudComponent = () => {\r\n//   return (\r\n//     <StyledCloudWrapper>\r\n//       <StyledCloudImg src={cloudSvg} alt=\"\" />\r\n//       <StyledCloudContainer>This section utilizes Github's Octokit API to pull my latest commits</StyledCloudContainer>\r\n//     </StyledCloudWrapper>\r\n//   )\r\n// }","C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\container\\Activity\\ActivityComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ImageStyledComponents.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\sharedComponents\\ReactScrollComponentStyles.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\theme.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\shared\\design\\global.js",[],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponent.js",["118","119"],"C:\\Users\\L1 Rak\\Desktop\\Web Dev Files\\Projects\\react-portfolio-website\\src\\component\\presentational\\Home\\HomeComponentStyles.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"128","line":1,"column":26,"nodeType":"126","messageId":"127","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"129","line":3,"column":37,"nodeType":"126","messageId":"127","endLine":3,"endColumn":55},{"ruleId":"124","severity":1,"message":"130","line":3,"column":106,"nodeType":"126","messageId":"127","endLine":3,"endColumn":127},{"ruleId":"124","severity":1,"message":"131","line":3,"column":129,"nodeType":"126","messageId":"127","endLine":3,"endColumn":156},{"ruleId":"124","severity":1,"message":"132","line":3,"column":158,"nodeType":"126","messageId":"127","endLine":3,"endColumn":185},{"ruleId":"124","severity":1,"message":"133","line":3,"column":211,"nodeType":"126","messageId":"127","endLine":3,"endColumn":236},{"ruleId":"134","severity":1,"message":"135","line":26,"column":8,"nodeType":"136","endLine":26,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":9,"column":17,"nodeType":"140","endLine":9,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":40,"column":5,"nodeType":"143","messageId":"144","endLine":58,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":252,"column":9,"nodeType":"143","messageId":"144","endLine":272,"endColumn":10},{"ruleId":"145","severity":1,"message":"146","line":256,"column":13,"nodeType":"147","messageId":"148","endLine":260,"endColumn":14},{"ruleId":"124","severity":1,"message":"149","line":3,"column":120,"nodeType":"126","messageId":"127","endLine":3,"endColumn":139},{"ruleId":"134","severity":1,"message":"150","line":59,"column":8,"nodeType":"136","endLine":59,"endColumn":10,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":105,"column":25,"nodeType":"140","endLine":105,"endColumn":104},{"ruleId":"138","severity":1,"message":"139","line":116,"column":13,"nodeType":"140","endLine":116,"endColumn":16},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledContactInput' is defined but never used.","'StyledContactTextarea' is defined but never used.","'StyledContactFNameContainer' is defined but never used.","'StyledContactLNameContainer' is defined but never used.","'StyledNameInputContainers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["156"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'StyledCommitGitLink' is defined but never used.","React Hook useEffect has a missing dependency: 'octokit'. Either include it or remove the dependency array.",["157"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [scrollTop]",{"range":"162","text":"163"},"Update the dependencies array to be: [octokit]",{"range":"164","text":"165"},[1189,1191],"[scrollTop]",[2453,2455],"[octokit]"]